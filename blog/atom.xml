<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://orbits.do/blog</id>
    <title>Orbits documentation Blog</title>
    <updated>2025-08-27T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://orbits.do/blog"/>
    <subtitle>Orbits documentation Blog</subtitle>
    <icon>https://orbits.do/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Write your CI/CD in TypeScript]]></title>
        <id>https://orbits.do/blog/ci-cd-in-typescript</id>
        <link href="https://orbits.do/blog/ci-cd-in-typescript"/>
        <updated>2025-08-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[If most CI/CD tools today are robust, the way we define scripts in them comes with a few drawbacks:]]></summary>
        <content type="html"><![CDATA[<p>If most CI/CD tools today are robust, the way we define scripts in them comes with a few drawbacks:</p>
<ul>
<li>they have strong vendor lock-ins;</li>
<li>they are difficult to test and debug locally;</li>
<li>they all use a different syntax in YAML, which is difficult to extend and compose.
For all these reasons, when the person who wrote them is not around, it’s not uncommon that teams don’t know what scripts do. They rarely evolve and their maintenance is hard.</li>
</ul>
<p>Using code and native Node.js modules to write CI/CD could solve all these problems and comes with a lot of benefits:</p>
<ul>
<li>it’s possible to debug locally. To avoid regressions, it's even possible to test the CI/CD with a normal testing framework;</li>
<li>it offers better reusability across projects and greater composability;</li>
<li>it uses code instead of configuration, making it easy to catch errors, manage retries, loops, and conditional logic;</li>
<li>it integrates seamlessly with the rich Node.js ecosystem.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="ci-cd" src="https://orbits.do/assets/images/singe-ci-cd-a48abc34e4df28cef342f6e8657142e5.png" width="1534" height="644" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-handle-your-cicd-in-nodejs-with-orbits">Example: handle your CI/CD in Node.js with Orbits<a href="https://orbits.do/blog/ci-cd-in-typescript#example-handle-your-cicd-in-nodejs-with-orbits" class="hash-link" aria-label="Direct link to Example: handle your CI/CD in Node.js with Orbits" title="Direct link to Example: handle your CI/CD in Node.js with Orbits">​</a></h2>
<p>This blog post will follow the <a href="https://github.com/LaWebcapsule/orbits/tree/main/samples/simple-deployment-pipeline" target="_blank" rel="noopener noreferrer">simple deployment pipeline sample</a> available on the github repository of orbits.</p>
<p>This sample deploys an AWS Lambda that will respond to a GET request with this architecture:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">┌────────────────┐    ┌────────────────┐    ┌────────────────┐</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   cloudfront   │◄──►│   api gateway  │◄──►│   lambda       │</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└────────────────┘    └────────────────┘    └────────────────┘</span><br></span></code></pre></div></div>
<p>Our complete workflow is:</p>
<ol>
<li>Format, lint and test our Lambda code</li>
<li>Deploy it to AWS using CDK and the orbits CDK helper</li>
<li>Clear the CloudFront cache</li>
<li>Check the deployed endpoint</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://orbits.do/blog/ci-cd-in-typescript#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h3>
<p>You'll need:</p>
<ul>
<li>Access to one AWS account</li>
<li>Node.js and npm installed</li>
<li>MongoDB instance for orbits state management</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="project-setup">Project Setup<a href="https://orbits.do/blog/ci-cd-in-typescript#project-setup" class="hash-link" aria-label="Direct link to Project Setup" title="Direct link to Project Setup">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Clone the repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/LaWebcapsule/orbits.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd samples/simple-deployment-pipeline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Configure environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export AWS_REGION=you-aws-region</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export AWS_ACCOUNT=you-aws-account</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install the CLI either globally or in your project</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## globally</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm i @orbi-ts/cli -g</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## in your project</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm i @orbi-ts/cli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># define your mongo_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## default is mongodb://localhost:27017/orbits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ORBITS_DB__MONGO__URL=your-mongo-url</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="run-the-deployment-workflow">Run the deployment workflow<a href="https://orbits.do/blog/ci-cd-in-typescript#run-the-deployment-workflow" class="hash-link" aria-label="Direct link to Run the deployment workflow" title="Direct link to Run the deployment workflow">​</a></h3>
<p>From peeking at <code>orbi.ts</code> we see that <code>DeployHelloWorkflow</code> takes two arguments:</p>
<ul>
<li><code>region</code>: the AWS region</li>
<li><code>account</code>: the AWS account</li>
</ul>
<p>So running it is as easy as typing this command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">orbits-cli actions run -f src/orbits/orbi.ts --local-worker \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DeployHelloWorkflow \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  region=$AWS_REGION \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  account=$AWS_ACCOUNT</span><br></span></code></pre></div></div>
<p>Here is a video of the deployment:</p>
<video controls="" width="100%"><source src="https://orbits-assets.s3.eu-west-3.amazonaws.com/public/videos/cli-run.mp4"></video>
<br>
<br>
<p>We can get the result of the deploy action using the get method (provided its ID is <code>689de1b3fcb667fee45a4bfe</code>):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜ orbits-cli actions get 689de1b3fcb667fee45a4bfe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID                       ┆ ACTION REF     ┆ STATE   ┆ RESULT                                                                                                                                                             ┆ LAST ACTIVITY ┆ NEXT ACTIVITY ┆ PARENT &gt; REF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">689de1b3fcb667fee45a4bfe ┆ LambdaResource ┆ SUCCESS ┆ {"CfId":"E28NIDFX6OEEC6","HelloAPIEndpointA3FBFD89":"https://fueo1zarcg.execute-api.eu-west-3.amazonaws.com/prod/","CfDomainName":"d16q083cvq1ymk.cloudfront.net"} ┆ —             ┆ in 7min 45s   ┆ 689de1b1fcb667fee45a4bc1 &gt; deploy</span><br></span></code></pre></div></div>
<p>With its ID, you can get the graphical view of an Action / Workflow at any moment:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">orbits-cli actions watch &lt;ACTION_ID&gt;</span><br></span></code></pre></div></div>
<p>With this in mind, you have a complete history of your deployment and can see precisely where it failed.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="debugging-part-of-the-workflow">Debugging part of the workflow<a href="https://orbits.do/blog/ci-cd-in-typescript#debugging-part-of-the-workflow" class="hash-link" aria-label="Direct link to Debugging part of the workflow" title="Direct link to Debugging part of the workflow">​</a></h3>
<p>In this section, we’ll introduce a failure in the Code Quality workflow and see how it shows up during execution.</p>
<p>First, here’s how our deployment workflow is defined:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/orbi.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Workflow </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@orbi-ts/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> CodeQualityWorkflow </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./code-quality'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> InvalidateCacheAction </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./invalidate-cache'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> LambdaResource </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./lambda-resource'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> VerifyLambdaDeploymentAction </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./verify'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DeployHelloWorkflow</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Workflow</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> IArgument</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Workflow</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'IArgument'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">define</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'quality'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CodeQualityWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'deploy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">region</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">account</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'invalidate cache'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">InvalidateCacheAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                distributionId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CfId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">region </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'verify'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">VerifyLambdaDeploymentAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                endpoint</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">https://</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">result</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">CfDomainName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Because we know the name of an action and its arguments, running it directly is very simple.</p>
<p>Let’s try running the <em>Code Quality</em> workflow. Since the <code>DeployHelloWorkflow</code> action doesn’t require arguments, we can run:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">orbits-cli actions run CodeQualityWorkflow -f src/orbits/orbi.ts --local-worker</span><br></span></code></pre></div></div>
<p>We get the following graphical view of the workflow — everything is green, no errors!</p>
<p><img decoding="async" loading="lazy" alt="run results" src="https://orbits.do/assets/images/test-run-c013a12b769ee2ecc80f4359a5ae9cbb.png" width="3420" height="2138" class="img_ev3q"></p>
<p>Now let’s make the handler fail the tests. We’ll modify the code as follows:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/handler/hello.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">HelloEvent</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    queryStringParameters</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        first_name</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        last_name</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handler </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HelloEvent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    statusCode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// const firstName = event.queryStringParameters.first_name;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> firstName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Alice'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lastName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queryStringParameters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">last_name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> now </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        statusCode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation punctuation" style="color:#393A34">[</span><span class="token template-string interpolation">firstName</span><span class="token template-string interpolation punctuation" style="color:#393A34">,</span><span class="token template-string interpolation"> lastName</span><span class="token template-string interpolation punctuation" style="color:#393A34">]</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">filter</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">Boolean</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">join</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation string" style="color:#e3116c">' '</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:#393A34">||</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:#e3116c">'Guest'</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">, </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">time is </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">now</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">getUTCHours</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">now</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">getUTCMinutes</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">now</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">getUTCSeconds</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> (UTC)</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>When we re-run without exiting the process, the workflow fails and moves into the <code>ERROR</code> state. We can inspect the error in the logs, or view the result in the dedicated panel:</p>
<p><img decoding="async" loading="lazy" alt="run fail" src="https://orbits.do/assets/images/test-run-fail-0bd41d893b42f0b91fa56483ab7fd64a.png" width="3420" height="2138" class="img_ev3q"></p>
<p>Let’s fix the test by restoring the original line:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> firstName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queryStringParameters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">first_name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// const firstName = 'Alice'; &lt;-- remove this line</span><br></span></code></pre></div></div>
<p>Now, in another terminal, we can replay the test action by its ID:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">orbits-cli actions replay $ACTION_ID</span><br></span></code></pre></div></div>
<p>Or replay the entire workflow starting from the test step:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">orbits-cli actions replay $WORKFLOW_ID -p test</span><br></span></code></pre></div></div>
<p>This time everything passes again — back to green ✅.</p>
<p>See it in action:</p>
<video controls="" width="100%"><source src="https://orbits-assets.s3.eu-west-3.amazonaws.com/public/videos/cli-replay.mp4"></video>
<br>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="going-further">Going further<a href="https://orbits.do/blog/ci-cd-in-typescript#going-further" class="hash-link" aria-label="Direct link to Going further" title="Direct link to Going further">​</a></h3>
<ul>
<li>You can now write and integrate CI/CD workflows directly into your own project.</li>
<li>More than just workflows, orbits is especially useful when you want to share workflows across projects and tenants. Read our <a href="https://orbits.do/blog/orchestration-typescript">blog series about orchestration</a>.</li>
<li>As the project grows, we plan to add more helper functions to quickly build your CI/CD. Stay up to date by following the <a href="https://github.com/LaWebcapsule/orbits" target="_blank" rel="noopener noreferrer">github repository</a>.</li>
</ul>
<hr>
<p><em>Wanna try it yourself? The complete example code and setup instructions are available in the <a href="https://github.com/LaWebcapsule/orbits/tree/main/samples/simple-deployment-pipeline" target="_blank" rel="noopener noreferrer">github repository</a>. Give it a spin!</em></p>]]></content>
        <author>
            <name>Tom Marcuzzi</name>
            <uri>https://linkedin.com/in/tom-marcuzzi</uri>
        </author>
        <category label="orchestration" term="orchestration"/>
        <category label="OrbiTS" term="OrbiTS"/>
        <category label="CLI" term="CLI"/>
        <category label="AWS CDK" term="AWS CDK"/>
        <category label="ci/cd" term="ci/cd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A deployment workflow with TypeScript]]></title>
        <id>https://orbits.do/blog/orchestration-typescript</id>
        <link href="https://orbits.do/blog/orchestration-typescript"/>
        <updated>2025-08-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In modern platform engineering, building a developer self-service portal isn’t just about provisioning — it’s about ensuring the entire golden path reliably completes, from infrastructure to runtime configuration.]]></summary>
        <content type="html"><![CDATA[<p>In modern platform engineering, building a developer self-service portal isn’t just about provisioning — it’s about ensuring the entire <a href="https://www.redhat.com/en/topics/platform-engineering/golden-paths" target="_blank" rel="noopener noreferrer">golden path</a> reliably completes, from infrastructure to runtime configuration.
Whether you're spinning up environments for feature previews or onboarding a new client, orchestration is <a href="https://platformengineering.org/blog/why-your-internal-developer-platform-needs-a-backend" target="_blank" rel="noopener noreferrer">the logic that holds everything together</a> — especially when things go wrong.
Your orchestrator should let you observe state transitions and trigger specific commands accordingly—whether it's provisioning, reconciling drift, or handling failures.</p>
<p><img decoding="async" loading="lazy" alt="workflow" src="https://orbits.do/assets/images/workflow-a6c06fbf3b7701ff3ddb4cd891038c19.png" width="1000" height="416" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-deploying-a-backend-from-scratch">Example: deploying a backend from scratch<a href="https://orbits.do/blog/orchestration-typescript#example-deploying-a-backend-from-scratch" class="hash-link" aria-label="Direct link to Example: deploying a backend from scratch" title="Direct link to Example: deploying a backend from scratch">​</a></h2>
<p>Let’s walk through a typical use case for an agency or SaaS company: deploying a new backend environment for a client or project. This often involves:</p>
<ul>
<li>Creating a dedicated cloud account</li>
<li>Creating a Git repository</li>
<li>Deploying infrastructure-as-code (e.g., CDK or Terraform)</li>
<li>Running SQL migrations in the target environment</li>
<li>Notifying the team of success or failure</li>
</ul>
<p>Here’s how you would orchestrate that using Orbits:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-simple-declarative-workflow-in-typescript">A Simple declarative workflow in TypeScript<a href="https://orbits.do/blog/orchestration-typescript#a-simple-declarative-workflow-in-typescript" class="hash-link" aria-label="Direct link to A Simple declarative workflow in TypeScript" title="Direct link to A Simple declarative workflow in TypeScript">​</a></h3>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DeployBackend</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Workflow</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">define</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Step 1: Create Git and Cloud resources in parallel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> createGit </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CreateGitRepo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> createAWS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CreateAWSAccount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">all</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'git-create'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> createGit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'aws-create'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> createAWS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Step 2: Deploy Infrastructure-as-Code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> deploymentOutput </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">'iac-deploy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">DeployCDKStack</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Step 3: Run SQL migrations inside the newly provisioned environment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> migration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RunSQLMigrations</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            migration</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">executor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CloudExecutor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">deploymentOutput</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">env</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'sql-migrate'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> migration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Step 4: Handle errors with a notification</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">'notify-slack'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">SendSlackAlert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="advantages">Advantages<a href="https://orbits.do/blog/orchestration-typescript#advantages" class="hash-link" aria-label="Direct link to Advantages" title="Direct link to Advantages">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="inheritance-and-code-reuse">Inheritance and code reuse<a href="https://orbits.do/blog/orchestration-typescript#inheritance-and-code-reuse" class="hash-link" aria-label="Direct link to Inheritance and code reuse" title="Direct link to Inheritance and code reuse">​</a></h4>
<p>When managing multiple services (e.g., backend, frontend, authentication), it's common to share infrastructure logic—like creating a Git repository or provisioning a cloud account.</p>
<p>Orbits makes this easy by allowing you to extract shared logic into a base class:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">BaseWorkflow</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Workflow</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">defineCreation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> createGit </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CreateGitRepo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> createAWS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CreateAWSAccount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">all</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'git-create'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> createGit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'aws-create'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> createAWS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>You can then extend this base in specific workflows:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">FrontendWorkflow</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">BaseWorkflow</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Additional frontend-specific steps</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>By properly modeling shared resources, you can also ensure that different services (like frontend and backend) reuse the same AWS account rather than creating duplicates.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="typescript-ecosystem">TypeScript ecosystem<a href="https://orbits.do/blog/orchestration-typescript#typescript-ecosystem" class="hash-link" aria-label="Direct link to TypeScript ecosystem" title="Direct link to TypeScript ecosystem">​</a></h4>
<p>Since Orbits is written in TypeScript, you can directly use SDKs from your providers (like the AWS SDK).
For example, in order to create an AWS account, you can just call:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">OrganizationsClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">send</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CreateAccountCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AccountName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="test-on-local">Test on local<a href="https://orbits.do/blog/orchestration-typescript#test-on-local" class="hash-link" aria-label="Direct link to Test on local" title="Direct link to Test on local">​</a></h4>
<p>All the orchestrator run inside your node.js process.
As a consequence, you can run and test your workflows locally, just like any other TypeScript code — enabling fast iteration and simplified debugging during development.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="going-further">Going further<a href="https://orbits.do/blog/orchestration-typescript#going-further" class="hash-link" aria-label="Direct link to Going further" title="Direct link to Going further">​</a></h3>
<p>Want to go further and orchestrate multiple tenants or environments? Check out our next post on managing a fleet of stacks with Orbits.</p>]]></content>
        <author>
            <name>Loïc Déchamps</name>
            <uri>https://github.com/ldechamps</uri>
        </author>
        <category label="orchestration" term="orchestration"/>
        <category label="self-adaptive platform" term="self-adaptive platform"/>
        <category label="drift-detection" term="drift-detection"/>
        <category label="automation" term="automation"/>
        <category label="OrbiTS" term="OrbiTS"/>
        <category label="workflow" term="workflow"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why orchestration matters?]]></title>
        <id>https://orbits.do/blog/why-orchestration-matters</id>
        <link href="https://orbits.do/blog/why-orchestration-matters"/>
        <updated>2025-07-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[While cloud services offer great flexibility in their usage and consumption, their growth has also led to an increase in the supply, with a multiplication of APIs, tools, and platforms to enhance, facilitate, and optimize access to cloud services. \[1\] This proliferation of offerings is one of the reasons that has led to the heterogeneity of cloud environments and the difficulty of their interoperability. \[2\]. It is now widely accepted that “cloud resource management, traditionally handled by system administrators, must now be automated to be efficient, secure, and dynamic.” \[3\]]]></summary>
        <content type="html"><![CDATA[<p>While cloud services offer great flexibility in their usage and consumption, their growth has also led to an increase in the supply, with a multiplication of APIs, tools, and platforms to enhance, facilitate, and optimize access to cloud services. [<a href="https://www.researchgate.net/profile/Neha-Agrawal-4/publication/354149677_Autonomic_cloud_computing_based_management_and_security_solutions_State-of-the-art_challenges_and_opportunities/links/62c6bea051f08a717c149f44/Autonomic-cloud-computing-based-management-and-security-solutions-State-of-the-art-challenges-and-opportunities.pdf" target="_blank" rel="noopener noreferrer">1</a>] This proliferation of offerings is one of the reasons that has led to the heterogeneity of cloud environments and the difficulty of their interoperability. [<a href="https://theses.hal.science/tel-02798770" target="_blank" rel="noopener noreferrer">2</a>]. It is now widely accepted that “cloud resource management, traditionally handled by system administrators, must now be automated to be efficient, secure, and dynamic.” [<a href="https://radar.inria.fr/rapportsactivite/RA2023/ctrl-a/ctrl-a.pdf" target="_blank" rel="noopener noreferrer">3</a>]</p>
<p>From this perspective, Ops teams and developers must be supported by complex engineering platforms called Internal Developer Platforms. These platforms must ensure requirements for quality of service, security, and cloud cost, while also allowing administrators access for audit, customization, and modification purposes.</p>
<p><img decoding="async" loading="lazy" alt="orchestration" src="https://orbits.do/assets/images/orchestration-d5dc044ac56796d9ed2a3cbab68fa032.png" width="1000" height="420" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="autonomic-cloud-computing">Autonomic cloud computing<a href="https://orbits.do/blog/why-orchestration-matters#autonomic-cloud-computing" class="hash-link" aria-label="Direct link to Autonomic cloud computing" title="Direct link to Autonomic cloud computing">​</a></h2>
<p>To address the issue of heterogeneity in cloud resources, a research field called autonomic cloud computing has decided to overturn the imperative programming perspective. While it is difficult to specify the state of each resource used, the desired outcome—the target state of the system—is often known. Essentially, this involves applying the principles of a thermostat to web infrastructures. The idea is to apply Control Theory results to software design, more precisely to cloud resource orchestration [<a href="https://inria.hal.science/hal-01281063v1/document" target="_blank" rel="noopener noreferrer">4</a>].</p>
<p>In this paradigm, a resource is managed by controllers. For example, Kubernetes DevOps engineers are accustomed to <a href="https://kubernetes.io/docs/concepts/architecture/controller/" target="_blank" rel="noopener noreferrer">handling controllers</a> and build their infrastructures by specifying desired states, such as indicating that a service node should always consume between 30% and 100% of its dedicated CPU.</p>
<p>However, these controllers are only used within limited scopes. Indeed, autonomic computing (AC) creates complex systems, which slows down their generalization [<a href="https://www.sei.cmu.edu/library/guide-to-implementing-devsecops-for-a-system-of-systems-in-highly-regulated-environments/" target="_blank" rel="noopener noreferrer">5</a>]. Moreover, mastering this paradigm by system engineers is a challenge for its adoption [<a href="https://inria.hal.science/hal-01281063v1/document" target="_blank" rel="noopener noreferrer">6</a>].</p>
<p>Actions aimed at ensuring infrastructure commissioning, structuring incident response, or verifying application compliance with security policies are rarely subject today to feedback loops. The definition of transitions between configurations is then “very tedious and costly, which may consequently lead to error-prone dynamic behaviors” [<a href="https://hal.science/hal-01450517" target="_blank" rel="noopener noreferrer">7</a>].</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-role-of-operator-knowledge-in-devsecops-environments">The Role of operator knowledge in DevSecOps environments<a href="https://orbits.do/blog/why-orchestration-matters#the-role-of-operator-knowledge-in-devsecops-environments" class="hash-link" aria-label="Direct link to The Role of operator knowledge in DevSecOps environments" title="Direct link to The Role of operator knowledge in DevSecOps environments">​</a></h2>
<p>This separation, however, comes from the DevSecOps approach itself. Embedded in a control paradigm, it is important for organizations to have an abstract understanding of all their components. Thus, implementation models used in highly regulated environments begin with the establishment of architectural diagrams and models [<a href="https://kilthub.cmu.edu/articles/report/Using_Model-Based_Systems_Engineering_MBSE_to_Assure_a_DevSecOps_Pipeline_is_Sufficiently_Secure/22592884?file=40862315" target="_blank" rel="noopener noreferrer">8</a>]. In these models, the response to an event and the actions applied to the system are pipelines [<a href="https://www.sei.cmu.edu/library/guide-to-implementing-devsecops-for-a-system-of-systems-in-highly-regulated-environments/" target="_blank" rel="noopener noreferrer">5</a>]. Deploying a new software version, building an artifact, or responding to a security incident are all encompassed under the concept of a pipeline or workflow.</p>
<p>As a consequence of this perspective, in the industry, all tools responsible for this DevSecOps part are workflow tools that themselves use <a href="https://luigi.readthedocs.io/en/stable/tasks.html" target="_blank" rel="noopener noreferrer">acyclic graphs</a>.</p>
<p>Such a design implicitly assumes that a human, an Ops engineer, supervises and can have full knowledge of the entire system. This thesis has proven difficult to maintain given the system’s complexity but, within a socio-economic system, it helps maintain the chain of accountability. In this regard, a number of anti-patterns that appear in Continuous Integration (CI) construction stem from the implementers’ lack of system knowledge. For example, CI anti-patterns often arise from the “inadequate choice of hardware and software components [which] can make artifact builds slow and non-reproducible” [<a href="https://www.zora.uzh.ch/id/eprint/197036/" target="_blank" rel="noopener noreferrer">9</a>]. As mentioned earlier, resource management systems that rely on exact step specifications prove error-prone and suboptimal; they hinder the replicability of architectures.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-antinomy-between-dynamic-adaptation-and-acyclic-workflows">The antinomy between dynamic adaptation and acyclic workflows<a href="https://orbits.do/blog/why-orchestration-matters#the-antinomy-between-dynamic-adaptation-and-acyclic-workflows" class="hash-link" aria-label="Direct link to The antinomy between dynamic adaptation and acyclic workflows" title="Direct link to The antinomy between dynamic adaptation and acyclic workflows">​</a></h2>
<ul>
<li>Autonomic cloud computing advocates the use of algorithms based on feedback loops to dynamically adapt to changes.</li>
<li>Workflows responsible for orchestrating distributed environments, however, are designed as acyclic graphs, thereby preventing the incorporation of feedback loops and the specification of deliveries through desired state definitions.
Yet today, “there is no cloud resource orchestration programming language to uniformly describe and combine resource descriptions.” [<a href="https://ieeexplore.ieee.org/document/7230217" target="_blank" rel="noopener noreferrer">10</a>]</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="unlocking-efficiency-and-security-with-autonomic-cloud-practices">Unlocking efficiency and security with autonomic cloud practices<a href="https://orbits.do/blog/why-orchestration-matters#unlocking-efficiency-and-security-with-autonomic-cloud-practices" class="hash-link" aria-label="Direct link to Unlocking efficiency and security with autonomic cloud practices" title="Direct link to Unlocking efficiency and security with autonomic cloud practices">​</a></h2>
<p>As a consequence, a strategic application of autonomic computing (AC) across the entire application lifecycle—including critical DevSecOps processes—offers several key benefits:</p>
<ul>
<li>
<p>Reduce error-prone deployments: a control system based on AC enables effective immediate rollbacks in case a bug is present in a release.</p>
</li>
<li>
<p>Increase system security: automatic detection of certain events, such as the release of a security patch, helps reduce the attack surface.</p>
</li>
<li>
<p>Simplify design for operators: with the right level of expressiveness, operators no longer need to know the entire system but only the desired state of their application.</p>
</li>
</ul>
<p>To support these goals, Orbits provides a TypeScript framework designed for effortlessly creating state machines and feedback loops, empowering developers and operators to effectively manage the lifecycle of cloud stacks.</p>]]></content>
        <author>
            <name>Louis Dussarps</name>
            <uri>https://github.com/louisdussarps</uri>
        </author>
        <category label="orchestration" term="orchestration"/>
        <category label="self-adaptive platform" term="self-adaptive platform"/>
        <category label="drift-detection" term="drift-detection"/>
        <category label="automation" term="automation"/>
        <category label="OrbiTS" term="OrbiTS"/>
        <category label="workflow" term="workflow"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Write Node.js workflows to orchestrate microservices]]></title>
        <id>https://orbits.do/blog/workflows-orchestrate-microservices</id>
        <link href="https://orbits.do/blog/workflows-orchestrate-microservices"/>
        <updated>2025-07-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Databases follow the principle of transactions — a set of changes that must either all succeed or all fail. But when an application interacts with multiple databases or connects to various APIs (as is the case for most applications today), the guarantees of ACID are lost. Workflows, state machines, and the saga pattern help achieve a similar level of reliability, often at the cost of more complex code. Here, we introduce a Node.js framework that makes it easy to write such workflows in TypeScript.]]></summary>
        <content type="html"><![CDATA[<p>Databases follow the principle of transactions — a set of changes that must either all succeed or all fail. But when an application interacts with multiple databases or connects to various APIs (as is the case for most applications today), the guarantees of ACID are lost. Workflows, state machines, and the saga pattern help achieve a similar level of reliability, often at the cost of more complex code. Here, we introduce a <strong>Node.js</strong> framework that makes it easy to write such workflows in TypeScript.</p>
<p>To follow along, you can find the full source code in <a href="https://github.com/LaWebcapsule/orbits/tree/main/samples/orchestrate-lambda" target="_blank" rel="noopener noreferrer">Orbit’s GitHub repository</a>.</p>
<p><img decoding="async" loading="lazy" alt="lightweight temporal alternative" src="https://orbits.do/assets/images/lightweight-temporal-3bf095564584d734cce5f77a6d78ecb6.png" width="1000" height="400" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-explicitly-orchestrate-workflows">Why explicitly orchestrate workflows?<a href="https://orbits.do/blog/workflows-orchestrate-microservices#why-explicitly-orchestrate-workflows" class="hash-link" aria-label="Direct link to Why explicitly orchestrate workflows?" title="Direct link to Why explicitly orchestrate workflows?">​</a></h2>
<p>Let's take a common use case in a business application: <strong>managing a stock trading transaction</strong>.</p>
<p>Here are the typical steps:</p>
<ol>
<li>Check the price of a stock</li>
<li>Generate a buy or sell recommendation</li>
<li>Execute the recommended action</li>
</ol>
<p>On the surface, these are simple asynchronous calls that could be chained in a function:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">trade</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> stockPrice </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">checkPrice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> recommendation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generateRecommendation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stockPrice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> recommendation </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'buy'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buyStock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stockPrice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sellStock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stockPrice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>But in reality, problems accumulate:</p>
<ul>
<li>What to do if a third-party service fails?</li>
<li>What if a network error occurs?</li>
<li>If the Node.js process is interrupted, the trade stops halfway, with no memory of the ongoing buy/sell operation.</li>
</ul>
<p>These issues, far from being theoretical, can have financial consequences. For example, a buy or sell action that is forgotten or left halfway through can lead to losses for the company.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-saga-orchestration-pattern">The Saga Orchestration Pattern<a href="https://orbits.do/blog/workflows-orchestrate-microservices#the-saga-orchestration-pattern" class="hash-link" aria-label="Direct link to The Saga Orchestration Pattern" title="Direct link to The Saga Orchestration Pattern">​</a></h2>
<p>The <a href="https://microservices.io/patterns/data/saga.html" target="_blank" rel="noopener noreferrer"><strong>Saga Orchestration Pattern</strong></a> effectively addresses these challenges. By centralizing workflow management in an orchestrator, this pattern mimics the transaction principle of a database. It allows a series of atomic actions, executed sequentially and under control, to be linked together into a global transaction.</p>
<p>The orchestrator:</p>
<ul>
<li>Explicitly manages state transitions between each step;</li>
<li>Persists workflow state to ensure recovery after crashes;</li>
<li>Can replay actions in case of transient failure;</li>
<li>Provides detailed traceability through clear naming of each step.</li>
</ul>
<p>Thus, the Saga Orchestration pattern not only guarantees resilience and consistency of operations but also facilitates maintenance, monitoring, and evolution of complex workflows in a distributed environment.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="use-case">Use Case<a href="https://orbits.do/blog/workflows-orchestrate-microservices#use-case" class="hash-link" aria-label="Direct link to Use Case" title="Direct link to Use Case">​</a></h2>
<p>In this blog post, we revisit the example of orchestrating a banking transaction. This canonical example was provided by <a href="https://docs.aws.amazon.com/step-functions/latest/dg/sample-lambda-orchestration.html" target="_blank" rel="noopener noreferrer">AWS Step Functions</a> and <a href="https://temporal.io/blog/temporal-replaces-state-machines-for-distributed-applications" target="_blank" rel="noopener noreferrer">Temporal</a>. Readers can refer to these articles to compare the syntax and ease of implementation offered by each tool.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-implementation">The Implementation<a href="https://orbits.do/blog/workflows-orchestrate-microservices#the-implementation" class="hash-link" aria-label="Direct link to The Implementation" title="Direct link to The Implementation">​</a></h2>
<p>Orbits proposes writing workflows in a structured and declarative manner.
You can explore and experiment with the full source code of the example described in this blog post in <a href="https://github.com/LaWebcapsule/orbits/tree/main/samples/orchestrate-lambda" target="_blank" rel="noopener noreferrer">Orbit’s GitHub repository</a>.<br>
<!-- -->Here's the concrete example:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/workflows/trading.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">TradingWorkflow</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Workflow</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> IResult</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> StockTransaction</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">define</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> checkPrice </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'check-price'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CheckStockPriceAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> stockPrice </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> checkPrice</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stockPrice</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> buyOrSell </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'recommendation'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">GenerateBuySellRecommendationAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                price</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> stockPrice</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buyOrSell</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">buyOrSellRecommendation </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sell'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sell </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">'sell'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">SellStockAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    price</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> stockPrice</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sell</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stockData</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> buy </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">'buy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">BuyStockAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    price</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> stockPrice</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stock_price</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> buy</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stockData</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This central workflow orchestrates each step by calling autonomous <strong>Actions</strong>, while maintaining branching logic and intermediate states.</p>
<ul>
<li><strong>Explicit orchestration</strong>: The Orbits engine manages calls, errors, retries, and state persistence</li>
<li><strong>Atomic actions</strong>: Each business step is an independent and testable action</li>
<li><strong>Conditional branching</strong>: The workflow flow can diverge based on data (buy or sell). It does not differ from standard TypeScript code.</li>
<li><strong>Extensibility</strong>: We can easily add steps, compensation logic, monitoring</li>
<li><strong>Resilience</strong>: Handles crash recovery, workflow state, and observability</li>
</ul>
<p>Each step is defined as an <strong>Orbits Action</strong>.</p>
<p>Here's the implementation of the buy action:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">BuyStockAction</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Action</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">API_ADDRESS</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'buyStock'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            method</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">'Content-Type'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> stock_price</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">price </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stockData </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ActionState</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">SUCCESS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This action:</p>
<ul>
<li>Takes a <strong>typed input</strong> (price)</li>
<li>Calls a remote API in an encapsulated manner</li>
<li><strong>Returns a state - ActionState.SUCCESS</strong>, ready to be recorded and resumed</li>
<li>Handles <strong>errors by default via a state - ActionState.ERROR</strong></li>
</ul>
<p>This structuring makes the action not only <strong>easy to test in isolation</strong> but also <strong>reusable in different workflows</strong>, while simplifying its instrumentation for monitoring or debugging.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="workflow-visualization">Workflow Visualization<a href="https://orbits.do/blog/workflows-orchestrate-microservices#workflow-visualization" class="hash-link" aria-label="Direct link to Workflow Visualization" title="Direct link to Workflow Visualization">​</a></h2>
<p>Here's a schematic representation of the orchestrated process:</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="benefits-summary">Benefits Summary<a href="https://orbits.do/blog/workflows-orchestrate-microservices#benefits-summary" class="hash-link" aria-label="Direct link to Benefits Summary" title="Direct link to Benefits Summary">​</a></h2>
<p>Adopting Orbits offers:</p>
<p><strong>Standard TypeScript</strong></p>
<p>Orbits is a standard TypeScript framework. You write promises and asynchronous functions just like you would anywhere else.</p>
<p><strong>Clear separation of responsibilities</strong></p>
<ul>
<li><strong>Workflow</strong> = orchestration</li>
<li><strong>Action</strong> = unit business logic</li>
</ul>
<p><strong>Flexibility &amp; Scalability</strong></p>
<ul>
<li>We can modify the flow without touching business components</li>
<li>Actions are reusable in multiple workflows</li>
</ul>
<p><strong>Resilience and recovery</strong></p>
<ul>
<li>Orbits manages state persistence</li>
<li>Automatic recovery from the last valid point</li>
</ul>
<p><strong>Native observability</strong></p>
<ul>
<li>Each action is traceable, named, monitorable</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="going-further">Going further<a href="https://orbits.do/blog/workflows-orchestrate-microservices#going-further" class="hash-link" aria-label="Direct link to Going further" title="Direct link to Going further">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-lambdas-async-invocations">Using lambdas async invocations<a href="https://orbits.do/blog/workflows-orchestrate-microservices#using-lambdas-async-invocations" class="hash-link" aria-label="Direct link to Using lambdas async invocations" title="Direct link to Using lambdas async invocations">​</a></h3>
<p>For the sake of hypothesis, let’s assume our Lambda function runs for an extended period of time (which is not the case here). In such scenarios, there’s a high chance that the initial HTTP call triggering the Lambda might fail unexpectedly—due to a network issue or timeout, for example.</p>
<p>To prevent such failures from disrupting the overall workflow, you can configure retry policies.</p>
<p>Orbits also supports asynchronous APIs and allows you to track execution status over time. When dealing with long-running Lambda functions, an Orbits action can return with an <code>ActionState.IN_PROGRESS</code>, and then delegate the follow-up logic to the <code>watcher()</code> <a href="https://orbits.do/documentation/core-concepts/action">method</a>, which periodically checks the progress of the async process.</p>
<p>This approach requires a bit of additional setup, as you’ll need to interact with the AWS Lambda API to track the specific invocation’s result.</p>
<p>We’ll cover how Orbits makes it easy to manage long-running processes in a dedicated blog post soon.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resources-to-manage-concurrency">Using resources to manage concurrency<a href="https://orbits.do/blog/workflows-orchestrate-microservices#using-resources-to-manage-concurrency" class="hash-link" aria-label="Direct link to Using resources to manage concurrency" title="Direct link to Using resources to manage concurrency">​</a></h3>
<p>In our example, if we trigger the same order twice, it will be processed twice—this isn’t always the desired behavior.
Orbits provides an opinionated way to handle concurrency through a concept called resources. <a href="https://orbits.do/documentation/core-concepts/resource">Resources</a> allow you to control and limit the execution of actions to prevent unintended duplication.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://orbits.do/blog/workflows-orchestrate-microservices#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>With the simplicity of <strong>Orbits in Node.js</strong>, we can build systems that are reliable, readable, and maintainable, without changing your coding practices.</p>
<p>For your critical processes — e-commerce, finance, logistics, etc. — <strong>adopting such an approach will significantly reduce your bug rate and inconsistencies</strong>.</p>
<hr>
<p><em>Learn more about Orbits and its capabilities in our <a href="https://orbits.do/documentation/quick-start">documentation</a>.</em></p>]]></content>
        <author>
            <name>Loïc Déchamps</name>
            <uri>https://github.com/ldechamps</uri>
        </author>
        <author>
            <name>Louis Dussarps</name>
            <uri>https://github.com/louisdussarps</uri>
        </author>
        <category label="orchestration" term="orchestration"/>
        <category label="microservices" term="microservices"/>
        <category label="saga-pattern" term="saga-pattern"/>
        <category label="OrbiTS" term="OrbiTS"/>
        <category label="workflow" term="workflow"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automate deployments of cdk8s template]]></title>
        <id>https://orbits.do/blog/programmable-cdk8s-deployment</id>
        <link href="https://orbits.do/blog/programmable-cdk8s-deployment"/>
        <updated>2025-07-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cdk8s is a great tool to write your Kubernetes IaC templates using standard programming languages. But unlike the AWS cdk, which is tightly integrated with CloudFormation to manage stack deployment, cdk8s has no native deployment mechanism.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://cdk8s.io/" target="_blank" rel="noopener noreferrer">Cdk8s</a> is a great tool to write your Kubernetes IaC templates using standard programming languages. But unlike the <a href="https://aws.amazon.com/fr/cdk/" target="_blank" rel="noopener noreferrer">AWS cdk</a>, which is tightly integrated with CloudFormation to manage stack deployment, cdk8s has no native deployment mechanism.</p>
<p>By default, it allows you to synthesize manifests and deploy them using <code>kubectl apply</code>, or optionally through <a href="https://helm.sh/" target="_blank" rel="noopener noreferrer">Helm</a>. While both approaches can work, they often fall short for more advanced use cases — for example, when you want to programmatically chain deployments, export values from the chart, or implement a custom rollback and prune strategy.</p>
<p>In this blog post, we’ll explain how we built a model-driven orchestrator for cdk8s using Orbits — a lightweight framework for orchestrating cloud resources and workflows. We’ll show how you can use it, adapt it to your own needs, or even build your own orchestrator based on the same principles. If Orbits fits your use case, you can directly reuse what we’ve built.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-need-for-cdk8s-orchestration">The Need for cdk8s orchestration<a href="https://orbits.do/blog/programmable-cdk8s-deployment#the-need-for-cdk8s-orchestration" class="hash-link" aria-label="Direct link to The Need for cdk8s orchestration" title="Direct link to The Need for cdk8s orchestration">​</a></h2>
<p>There is no built-in way to programmatically and reliably deploy a cdk8s stack — especially outside of the AWS ecosystem.</p>
<p>The current options are:</p>
<ul>
<li>Synthesize the stack and apply it with <code>kubectl apply</code></li>
<li>Deploy the stack as a Helm chart</li>
</ul>
<p>But both of these have shortcomings:</p>
<ul>
<li>They are not easily orchestrated programmatically;</li>
<li>Helm has known limitations when integrating with cdk8s;</li>
<li>There’s no native support for retries, failover, or rollback;</li>
<li>There is no built-in mechanism to chain the deployment of multiple charts, especially if some charts are on one kube cluster and other on another kube ;cluster</li>
<li>Helm’s rollback model didn’t align with our platform needs.</li>
</ul>
<p>In our case — building internal platforms for highly regulated environments — we needed more control. Our deployment flow had to:</p>
<ul>
<li>Configure cloud provider resources via API calls;</li>
<li>Deploy multiple charts programmatically in a precise order;</li>
<li>Use the results of deployments (like IPs or service names) to configure other infrastructure components.</li>
</ul>
<p>Given these needs, existing options were simply not enough.
What we were looking for resembled the CloudFormation model:</p>
<ul>
<li>Attempt a deployment;</li>
<li>Rollback to the previous state on failure;</li>
<li>On success, prune obsolete resources;</li>
<li>Output values that could be reused in subsequent steps.</li>
</ul>
<p>Additionally, we needed:</p>
<ul>
<li>Safe concurrent executions, to allow multiple deployments at the same time without conflict;</li>
<li>Built-in retry policies for transient failures.</li>
</ul>
<p>These requirements led us to build a dedicated orchestrator for cdk8s using Orbits — a model-driven orchestration engine designed for reliability and composability.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="final-result">Final result<a href="https://orbits.do/blog/programmable-cdk8s-deployment#final-result" class="hash-link" aria-label="Direct link to Final result" title="Direct link to Final result">​</a></h2>
<p>The result is an Orbits resource that manages your cdk8s deployment.
You can read the <a href="https://orbits.do/documentation/helper/integrations/cdk8s-resource">orbits documentation</a> on how to use it.</p>
<ul>
<li>You can use it by extending the base class:</li>
</ul>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">BasicResource</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Cdk8sResource</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    StackConstructor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> BasicChart</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<ul>
<li>Or dynamically assign a custom stack generation method:</li>
</ul>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> myCdk8sResource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Cdk8sResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myCdk8sResource</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">generateStack</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">cdk8s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Chart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">myCdk8sResource</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'empty-chart'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'update-stack'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> dynamicAction</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> myCdk8sResource </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Outputs</div><div class="admonitionContent_BuS1"><p>You can export outputs, which allows you to chain charts or propagate values (like an IP address for DNS updates)</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setOutput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> stack </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">generateStack</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> apiServiceInfo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">kubeApi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">coreApi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">readNamespacedService</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> stack</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loadBalancerService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        namespace</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> stack</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loadBalancerService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">namespace </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'default'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> apiServiceInfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loadBalancer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ingress</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ip</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Concurrency</div><div class="admonitionContent_BuS1"><p>Concurrency is also managed by Orbits. If a deployment is already running, concurrent executions will be serialized to prevent state corruption</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// somewhere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'deploy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">MyBasicChartResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// elsewhere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'deploy'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">MyBasicChartResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div><p>The two deployments will <a href="https://orbits.do/documentation/core-concepts/resource#convergent-execution-coalescing">coalesce</a>.</p></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Crash-proof</div><div class="admonitionContent_BuS1"><p>Orbits is <a href="https://orbits.do/documentation/quick-start#workflow-a-chain-of-actions">crash-proof</a>.
If a crash occurs mid-deployment, Orbits will resume from the same step on restart.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="implementation">Implementation<a href="https://orbits.do/blog/programmable-cdk8s-deployment#implementation" class="hash-link" aria-label="Direct link to Implementation" title="Direct link to Implementation">​</a></h2>
<p>From a cdk8s chart, we want to:</p>
<ul>
<li>Deploy the chart reliably</li>
<li>Retry on failure</li>
<li>Rollback to the previous state if necessary</li>
<li>Prune obsolete resources</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-orbits-cdk8s-resources">The orbits Cdk8s resources<a href="https://orbits.do/blog/programmable-cdk8s-deployment#the-orbits-cdk8s-resources" class="hash-link" aria-label="Direct link to The orbits Cdk8s resources" title="Direct link to The orbits Cdk8s resources">​</a></h3>
<p>In Orbits, <a href="https://orbits.do/documentation/core-concepts/resources">resources</a> are stateful units that define hooks like defineUpdate.
For the deployment of a cdk8s chart, we only need the <code>update</code> hook.
The high-level flow of the resource implementation is as follows:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Cdk8sResource</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineUpdate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"deploy"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rollBackNeeded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"rollback"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">finally</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"prune"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rollBackNeeded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"storeNewChart"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<!-- -->
<p>The complete implementation is available <a href="https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts" target="_blank" rel="noopener noreferrer">here on github</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="deploying-the-chart">Deploying the chart<a href="https://orbits.do/blog/programmable-cdk8s-deployment#deploying-the-chart" class="hash-link" aria-label="Direct link to Deploying the chart" title="Direct link to Deploying the chart">​</a></h4>
<p>There are multiple ways to deploy a stack, but we chose <code>kubectl apply</code> because it updates only the resources that changed. That means kubectl is required in the environment running the deployment.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ensuring-the-deployment-is-successful">Ensuring the deployment is successful<a href="https://orbits.do/blog/programmable-cdk8s-deployment#ensuring-the-deployment-is-successful" class="hash-link" aria-label="Direct link to Ensuring the deployment is successful" title="Direct link to Ensuring the deployment is successful">​</a></h4>
<p>We don’t just fire and forget. We verify that critical resources are ready:</p>
<ul>
<li>All Deployments reach a ready state;</li>
<li>Certificates (e.g., from cert-manager) are marked as ready.
This check helps us ensure the cluster is in a stable and usable state before moving forward.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="storing-the-latest-chart">Storing the latest chart<a href="https://orbits.do/blog/programmable-cdk8s-deployment#storing-the-latest-chart" class="hash-link" aria-label="Direct link to Storing the latest chart" title="Direct link to Storing the latest chart">​</a></h4>
<p>We store the chart contents in a Kubernetes Secret. The secret’s name is generated based on the stack name:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">genSecretName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">orbits.deployment.</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation keyword" style="color:#00009f">this</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">argument</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">stackName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This allows the system to compare the current state with the previous one during rollback or pruning.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="pruning-unused-resources">Pruning unused resources<a href="https://orbits.do/blog/programmable-cdk8s-deployment#pruning-unused-resources" class="hash-link" aria-label="Direct link to Pruning unused resources" title="Direct link to Pruning unused resources">​</a></h4>
<p>Pruning depends on whether the deployment succeeded:</p>
<ul>
<li>On success, we prune old resources;</li>
<li>On failure, we prune newly created resources.</li>
</ul>
<p>We compare the list of objects in the stored stack with the current state and remove the unneeded ones.
We make sure to never delete:</p>
<ul>
<li>Namespaces</li>
<li>PersistentVolumeClaims</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-benefits">Key Benefits<a href="https://orbits.do/blog/programmable-cdk8s-deployment#key-benefits" class="hash-link" aria-label="Direct link to Key Benefits" title="Direct link to Key Benefits">​</a></h3>
<ul>
<li>CloudFormation-like rollback for Cdk8s chart</li>
<li>Crash-safe and retryable deployments</li>
<li>Safe concurrent operations</li>
<li>Outputs and dependency chaining support</li>
<li>Multi-tenants deployment support</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-forward">Looking Forward<a href="https://orbits.do/blog/programmable-cdk8s-deployment#looking-forward" class="hash-link" aria-label="Direct link to Looking Forward" title="Direct link to Looking Forward">​</a></h2>
<p>Our orchestrator provides a robust and flexible foundation for managing cdk8s deployments in production. While it already solves some pain points, we plan to improve:</p>
<ul>
<li>Improved diff tools to preview changes before applying them</li>
<li>Extended tracking and monitoring of additional Kubernetes resources
Additionally, the resource offers a promising starting point for implementing drift detection, but that topic will be covered in a future post.</li>
</ul>
<hr>
<p><em>The source code of the CDk8SResource is available here: <a href="https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts" target="_blank" rel="noopener noreferrer">https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts</a></em></p>]]></content>
        <author>
            <name>Tom Marcuzzi</name>
            <uri>https://linkedin.com/in/tom-marcuzzi</uri>
        </author>
        <author>
            <name>Louis Dussarps</name>
            <uri>https://github.com/louisdussarps</uri>
        </author>
        <category label="CDK8S" term="CDK8S"/>
        <category label="OrbiTS" term="OrbiTS"/>
        <category label="Model-driven orchestration" term="Model-driven orchestration"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solving cross-account resources for AWS CDK]]></title>
        <id>https://orbits.do/blog/cross-account-cdk</id>
        <link href="https://orbits.do/blog/cross-account-cdk"/>
        <updated>2025-06-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[If you've ever tried to build a multi-account AWS architecture using CDK or CloudFormation, you've probably hit the same frustrating wall: cross-account resource references don't work without manual coordination and hardcoded values. What should be a simple task—like reading a parameter from Account A in a Lambda function deployed to Account B—becomes a tedious manual process. This behaviour is already documented and while AWS also documents workarounds, there’s no indication that this is going to change anytime soon. However, these approaches don't scale when you have multiple services and resources spanning different accounts across your organization.]]></summary>
        <content type="html"><![CDATA[<p>If you've ever tried to build a multi-account AWS architecture using CDK or CloudFormation, you've probably hit the same frustrating wall: cross-account resource references don't work without manual coordination and hardcoded values. What should be a simple task—like reading a parameter from Account A in a Lambda function deployed to Account B—becomes a tedious manual process. This behaviour is already <a href="https://www.luminis.eu/blog/cross-account-aws-resource-access-with-aws-cdk/" target="_blank" rel="noopener noreferrer">documented</a> and while AWS also documents <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/walkthrough-crossstackref.html" target="_blank" rel="noopener noreferrer">workarounds</a>, there’s no indication that this is going to change anytime soon. However, these approaches don't scale when you have multiple services and resources spanning different accounts across your organization.</p>
<p>This post walks through a practical example that demonstrates both the problem and a solution using orbits, a tool designed to seamless orchestrate all of your IaC with code.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-cross-account-problem">The Cross-Account Problem<a href="https://orbits.do/blog/cross-account-cdk#the-cross-account-problem" class="hash-link" aria-label="Direct link to The Cross-Account Problem" title="Direct link to The Cross-Account Problem">​</a></h2>
<p>AWS CDK and CloudFormation have a limitation: stacks cannot directly reference resources from other AWS accounts. This creates friction for common architectural patterns like:</p>
<ul>
<li>Sharing Docker images between development and production accounts</li>
<li>Accessing centralized secrets from distributed applications</li>
<li>Setting up VPC peering connections</li>
<li>Managing cross-account S3 bucket permissions</li>
<li>Distributing Lambda layers across organizational boundaries</li>
</ul>
<p>Here's what this limitation looks like in practice:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">cdk</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">App</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> paramA </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ParamStack</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'stack-A'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'account-A'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lambdaB </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LambdaStack</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'stack-B'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    parameterArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> paramA</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parameter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">arn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ❌ This fails at synthesis time</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'account-B'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>The traditional workaround involves manual steps: extracting ARNs, hardcoding values, coordinating resource policies, and deploying in specific sequences. This breaks the declarative nature of infrastructure-as-code and makes architectures brittle.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-real-world-example">A Real-World Example<a href="https://orbits.do/blog/cross-account-cdk#a-real-world-example" class="hash-link" aria-label="Direct link to A Real-World Example" title="Direct link to A Real-World Example">​</a></h2>
<p>Here's an "hello-world" scenario to illustrate the problem: deploying an AWS Systems Manager parameter in Account A and reading it from a Lambda function in Account B. While the "cross-account sharing" feature for AWS SSM parameter could be used, this simple use case illustrates the broader challenge perfectly.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-traditional-cdk-approach-doesnt-scale">The Traditional CDK Approach (Doesn't scale)<a href="https://orbits.do/blog/cross-account-cdk#the-traditional-cdk-approach-doesnt-scale" class="hash-link" aria-label="Direct link to The Traditional CDK Approach (Doesn't scale)" title="Direct link to The Traditional CDK Approach (Doesn't scale)">​</a></h3>
<p>With standard CDK, you'd need to:</p>
<ol>
<li>Deploy the parameter stack in Account A</li>
<li>Manually extract the parameter ARN</li>
<li>Hardcode the ARN into your Lambda stack for Account B</li>
<li>Manually configure cross-account IAM policies</li>
<li>Deploy the Lambda stack in Account B</li>
<li>Hope nothing changes, because updates require repeating this process</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-orchestration-solution-with-orbits">The Orchestration Solution with orbits<a href="https://orbits.do/blog/cross-account-cdk#the-orchestration-solution-with-orbits" class="hash-link" aria-label="Direct link to The Orchestration Solution with orbits" title="Direct link to The Orchestration Solution with orbits">​</a></h3>
<p>With orbits, the same architecture becomes straightforward:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> paramOutput </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'updateParam'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ParamResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'updateLambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackProps</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            parameterArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> paramOutput</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parameterArn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ✅ Direct cross-account reference</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>The key difference? Orbits handles the cross-account coordination automatically, allowing you to reference resources naturally regardless of which account they live in.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hands-on-building-the-example">Hands-On: Building the Example<a href="https://orbits.do/blog/cross-account-cdk#hands-on-building-the-example" class="hash-link" aria-label="Direct link to Hands-On: Building the Example" title="Direct link to Hands-On: Building the Example">​</a></h2>
<p>The following section walks through building this cross-account parameter example step by step.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://orbits.do/blog/cross-account-cdk#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h3>
<p>You'll need:</p>
<ul>
<li>Access to two AWS accounts with CloudFormation deployment permissions</li>
<li>Node.js and npm installed</li>
<li>MongoDB instance for orbits state management</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="project-setup">Project Setup<a href="https://orbits.do/blog/cross-account-cdk#project-setup" class="hash-link" aria-label="Direct link to Project Setup" title="Direct link to Project Setup">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Clone the repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone &lt;repository-url&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd cross-account-example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Configure environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp .base.env .env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Edit .env with your account details</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi .env</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="project-structure">Project structure<a href="https://orbits.do/blog/cross-account-cdk#project-structure" class="hash-link" aria-label="Direct link to Project structure" title="Direct link to Project structure">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">├── src/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── orbits/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   ├── orbi.ts # Main orchestration script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   ├── lambda-resource.ts # lambda resource definition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   ├── param-resource.ts # Param resource definition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   └── hello-resource.ts # Hello resource definition: the resource that make the junction between param and lambda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── cdk/              # CDK stack definitions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── lambda.ts # lambda CDK stack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       └── param.ts # Param CDK stack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── .base.env                # Environment template</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── .env                     # Your environment variables (git-ignored)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── README.md</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-resource-definitions">The Resource Definitions<a href="https://orbits.do/blog/cross-account-cdk#the-resource-definitions" class="hash-link" aria-label="Direct link to The Resource Definitions" title="Direct link to The Resource Definitions">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="lambda-and-param-cdk-stack">Lambda and Param CDK Stack<a href="https://orbits.do/blog/cross-account-cdk#lambda-and-param-cdk-stack" class="hash-link" aria-label="Direct link to Lambda and Param CDK Stack" title="Direct link to Lambda and Param CDK Stack">​</a></h4>
<p>We focus on two stack <code>LambdaStack</code> and <code>ParameterStoreStack</code>
[link to the stack]</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="lambda-stack">Lambda stack<a href="https://orbits.do/blog/cross-account-cdk#lambda-stack" class="hash-link" aria-label="Direct link to Lambda stack" title="Direct link to Lambda stack">​</a></h5>
<p>A lambda that will display the value of the parameter passed in parameter if it can access it.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="parameter-stack">Parameter stack<a href="https://orbits.do/blog/cross-account-cdk#parameter-stack" class="hash-link" aria-label="Direct link to Parameter stack" title="Direct link to Parameter stack">​</a></h4>
<p>A parameter store that stores an "hello-world" value.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="encapsulate-the-stacks-in-a-resource-definition">Encapsulate the stacks in a resource definition.<a href="https://orbits.do/blog/cross-account-cdk#encapsulate-the-stacks-in-a-resource-definition" class="hash-link" aria-label="Direct link to Encapsulate the stacks in a resource definition." title="Direct link to Encapsulate the stacks in a resource definition.">​</a></h4>
<p>Here's what a CDK resource definitions look like:</p>
<p><strong>Lambda Resource (lambda-resource.ts):</strong></p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/lambda-resource.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">LambdaResource</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">CdkStackResource</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    StackConstructor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> LambdaStack</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> IOutput</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        roleArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Let's go line by line.</p>
<ul>
<li><code>StackConstructor = LambdaStack</code>: this tells the orchestrator that <code>LambdaResource</code> will use the <code>LambdaStack</code> class constructor to define and manage its infrastructure.</li>
<li></li>
</ul>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> IOutput</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"roleArn"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>The CloudFormation stack for the Lambda function exports a single output: "roleArn", which is the ARN of the Lambda's execution role.
The IOutput declaration is used for type safety—it informs the developer that this resource will expose an output matching that structure.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>If not already done, the CDK environment will be automatically bootstrapped by the CDKResource—no other step is required, the full lifecycle of your resource is managed.</p></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="write-a-proxy-resource-to-orchestrate-both-lambda-and-param-deployment">Write a proxy resource to orchestrate both lambda and param deployment<a href="https://orbits.do/blog/cross-account-cdk#write-a-proxy-resource-to-orchestrate-both-lambda-and-param-deployment" class="hash-link" aria-label="Direct link to Write a proxy resource to orchestrate both lambda and param deployment" title="Direct link to Write a proxy resource to orchestrate both lambda and param deployment">​</a></h4>
<p>We could choose different orchestrations strategies.
Here we choose to have a proxy resources that deploy both the <code>Param</code> and the <code>Lambda</code> stack and that synchronize the use of both in coordination.</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="install-step">Install step<a href="https://orbits.do/blog/cross-account-cdk#install-step" class="hash-link" aria-label="Direct link to Install step" title="Direct link to Install step">​</a></h5>
<p>During the first step, we launch a first deployment of the <code>Lambda</code> stack.
At this step, the <code>ParamStore</code> stack does not exist, so no optional properties are passed.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/hello-resource.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineInstall</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'firstDeployLambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'lambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        awsProfileName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">profile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackProps</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">region</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="update-step">Update step<a href="https://orbits.do/blog/cross-account-cdk#update-step" class="hash-link" aria-label="Direct link to Update step" title="Direct link to Update step">​</a></h5>
<p>When updating the resource, we deploy both the <code>Param</code> and <code>Lambda</code> stack.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/hello-resource.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineUpdate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lambdaResource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lambdaOutput </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'getLambdaOutput'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lambdaResource</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getResourceOutput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> paramOutput </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'updateParam'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructParamResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lambdaOutput</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'updateLambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">paramOutput</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p><code>ParamResource</code> consumes the output of <code>LambdaResource</code> and vice versa.
As a consequence, we need to refine the constructs methods.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/hello-resource.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">paramOutput</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ParamResource</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'IOutput'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'lambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        awsProfileName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">profile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackProps</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            accountARoleArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> paramOutput</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">roleArn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            parameterArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> paramOutput</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">paramArn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">region</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">constructParamResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lambdaOutput</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> LambdaResource</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'IOutput'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ParamResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'param'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        awsProfileName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountA</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">profile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stackProps</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            accountBId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountB</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            accountBRoleArn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> lambdaOutput</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">roleArn</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            env</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                region</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">region</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                account</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argument</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">accountA</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="uninstall-step">Uninstall step<a href="https://orbits.do/blog/cross-account-cdk#uninstall-step" class="hash-link" aria-label="Direct link to Uninstall step" title="Direct link to Uninstall step">​</a></h4>
<p>To uninstall, we uninstall both the <code>Lambda</code> and <code>ParamStore</code> stacks.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">src/orbits/hello-resource.ts</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineUninstall</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'uninstallLambda'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructLambdaResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Uninstall'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'uninstallParam'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">constructParamResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Uninstall'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deployment">Deployment<a href="https://orbits.do/blog/cross-account-cdk#deployment" class="hash-link" aria-label="Direct link to Deployment" title="Direct link to Deployment">​</a></h3>
<p>The entire cross-account deployment happens with a single command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">export $(cat .env | xargs)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ORBITS_DB__MONGO__URL=your-mongo-url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npx tsx src/orbits/orbi.ts</span><br></span></code></pre></div></div>
<p>This orchestrates:</p>
<ol>
<li>Parameter deployment in Account A</li>
<li>Cross-account IAM policy setup</li>
<li>Lambda function deployment in Account B</li>
<li>All necessary permissions and configurations</li>
</ol>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="verification">Verification<a href="https://orbits.do/blog/cross-account-cdk#verification" class="hash-link" aria-label="Direct link to Verification" title="Direct link to Verification">​</a></h4>
<p>After deployment, you can test the Lambda function in Account B. It will successfully retrieve the parameter from Account A, demonstrating seamless cross-account access.</p>
<p>The Lambda logs will show:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Param: hello-world</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cleanup">Cleanup<a href="https://orbits.do/blog/cross-account-cdk#cleanup" class="hash-link" aria-label="Direct link to Cleanup" title="Direct link to Cleanup">​</a></h3>
<p>To remove all deployed resources from both accounts:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">export HELLO_COMMAND=uninstall</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npx tsx src/orbits/orbi.ts</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>This will permanently delete all resources created by this example. Make sure you want to remove everything before running this command.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-this-matters">Why This Matters<a href="https://orbits.do/blog/cross-account-cdk#why-this-matters" class="hash-link" aria-label="Direct link to Why This Matters" title="Direct link to Why This Matters">​</a></h2>
<p>This example might seem simple, but it represents a fundamental gain in how we think about multi-account architectures. Instead of treating cross-account access as an exception requiring special handling, orbits makes it a first-class citizen of your infrastructure-as-code workflow. It allows to completely automate cross-account resources definition.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-benefits">Key Benefits<a href="https://orbits.do/blog/cross-account-cdk#key-benefits" class="hash-link" aria-label="Direct link to Key Benefits" title="Direct link to Key Benefits">​</a></h3>
<ul>
<li><strong>Declarative Cross-Account Resources:</strong> Reference any resource from any account without manual coordination.</li>
<li><strong>Automatic Permission Management:</strong> IAM policies and resource policies are handled automatically.</li>
<li><strong>Consistent Deployment Experience:</strong> Multi-account deployments feel the same as single-account ones.</li>
<li><strong>Simplified Maintenance:</strong> Updates and changes don't require manual ARN extraction and policy coordination.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-forward">Looking Forward<a href="https://orbits.do/blog/cross-account-cdk#looking-forward" class="hash-link" aria-label="Direct link to Looking Forward" title="Direct link to Looking Forward">​</a></h2>
<p>Cross-account resource management shouldn't be a second-class citizen in your infrastructure-as-code workflow. Tools like orbits point toward a future where account boundaries enhance security without sacrificing developer experience.</p>
<p>If you're building multi-account architectures, I encourage you to try this example and see how much simpler cross-account resource management can be. The days of manual ARN extraction and policy coordination don't have to be permanent fixtures of AWS multi-account architectures.</p>
<hr>
<p><em>Ready to try it yourself? The complete example code and setup instructions are available in the repository. Give it a spin and share your experience with cross-account resource management.</em></p>]]></content>
        <author>
            <name>Louis Dussarps</name>
            <uri>https://github.com/louisdussarps</uri>
        </author>
        <category label="AWS CDK" term="AWS CDK"/>
        <category label="OrbiTS" term="OrbiTS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Infra is code]]></title>
        <id>https://orbits.do/blog/manifesto</id>
        <link href="https://orbits.do/blog/manifesto"/>
        <updated>2025-06-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Infra is code!]]></summary>
        <content type="html"><![CDATA[<p><em>Infra is code!</em>
At first glance, this slogan might be the most stupid one ever read for a long time — if not on the entire planet, then at least in the web sphere. Yes, infrastructure has always been code: from the Ubuntu web server to the Cockroach database, it is nothing but code controlled by code. But if the Ops field has progressively shifted towards the notion of Infrastructure as Code, it is precisely because there is a substantial difference: the DevOps domain is better formalized as a description of reproducible artifacts rather than as a prescription of successive commands to execute.
Thus, boldly displaying this slogan <em>Infra is code!</em> on any article should make any somewhat experienced DevOps practitioner pause.</p>
<p>Yet, friend reading these lines, don’t go away so quickly! Haven’t you already felt that while DevOps improved developers’ lives with democratization of virtualization, convergence of interfaces, and unprecedented deployment speed, infrastructure itself remained, tucked away in some Git annex, a poor relative of computer code — difficult to edit, inflexible, and slow to test?
The popular wisdom among developers seems to say: the less you touch infrastructure, the better off you are.
With this, tirelessly, we arrive at a state-of-the-art where:</p>
<ul>
<li>every project <a href="https://www.reddit.com/r/devops/comments/1l8dsax/whats_eating_up_most_of_your_time_as_a_devops/" target="_blank" rel="noopener noreferrer">restarts infrastructure work</a> as if its neighbor didn’t exist</li>
<li>building a service stack remains a patchwork, a <a href="https://www.tandfonline.com/doi/full/10.1080/17530350.2023.2229347" target="_blank" rel="noopener noreferrer">conglomerate of loosely connected elements</a></li>
<li>it is difficult, <a href="https://insights.sei.cmu.edu/documents/576/2019_019_001_539335.pdf" target="_blank" rel="noopener noreferrer">without manual intervention, to redeploy an app from scratch on a new environment</a>.</li>
<li>apps are <a href="https://theses.hal.science/tel-02798770/file/90479_BRABRA_2020_archivage-4.pdf" target="_blank" rel="noopener noreferrer">hardly portable from one cloud to another</a> — and the question of sovereignty is, out of frustration, abandoned.</li>
</ul>
<p>Finally, all in all, a large part of DevOps activity remains manual, and the trust chain in the system relies on a chain of responsibility and a comprehensive understanding of the system by a few operators in the team (which is positive) rather than on appropriate tooling (which is disappointing because, as system complexity grows, <a href="https://link.springer.com/chapter/10.1007/978-3-319-74183-3_4" target="_blank" rel="noopener noreferrer">relying solely on knowledge leads to rigid systems</a>).</p>
<p>Consequently, we unanimously demand that infrastructure specifications have the same rights and level of citizenship as any other piece of code in the stack.</p>
<p>A demand that could remain dead letter if it were not accompanied by two recommendations:</p>
<ul>
<li>
<p>orchestrators offer infrastructure an opportunity for liberation that it can seize to obtain its citizenship rights. The engineering platform movement has made a strong commitment in this direction and orchestration must be at the center of efforts.</p>
</li>
<li>
<p>increasingly, infrastructure benefits from being written in standard code: CDKs bear witness to the direction to follow. This allows a convergence of best practices between infrastructure and code.</p>
</li>
</ul>
<p>Thus, IaC must be enhanced, orchestrated, and managed — as much as possible through standard code.
We began working under these assumptions three years ago, and it has allowed us to build numerous engineering platforms since then. As we found nothing that met our criteria, we built our own orchestration framework: OrbiTS (aka Orbi.ts).
It is now mature enough to fly on its own: since freedom is not won alone, we present it today to the community, hoping it can help build infrastructures and deployment pipelines that are more flexible, more robust, and more sovereign.</p>]]></content>
        <author>
            <name>Louis Dussarps</name>
            <uri>https://github.com/louisdussarps</uri>
        </author>
        <author>
            <name>Loïc Déchamps</name>
            <uri>https://github.com/ldechamps</uri>
        </author>
        <author>
            <name>Arthur Rouzoul</name>
            <uri>https://linkedin.com/in/arthurrouzoul</uri>
        </author>
        <author>
            <name>Tom Marcuzzi</name>
            <uri>https://linkedin.com/in/tom-marcuzzi</uri>
        </author>
        <author>
            <name>Sofia Chakir</name>
            <uri>https://linkedin.com/in/sofia-chakir</uri>
        </author>
        <category label="Manifesto" term="Manifesto"/>
        <category label="OrbiTS" term="OrbiTS"/>
    </entry>
</feed>