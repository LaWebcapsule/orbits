"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4665],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(96540);const r={},c=s.createContext(r);function i(e){const t=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(c.Provider,{value:t},e.children)}},51689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"documentation/helper/integrations/cdk8s-resource","title":"Cdk8s Resources","description":"CDK8S Resources let you programmatically manage and deploy your CDK8S charts.","source":"@site/docs/documentation/helper/integrations/cdk8s-resource.md","sourceDirName":"documentation/helper/integrations","slug":"/documentation/helper/integrations/cdk8s-resource","permalink":"/documentation/helper/integrations/cdk8s-resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CDK Resources","permalink":"/documentation/helper/integrations/cdk-resource"},"next":{"title":"Docker executor","permalink":"/documentation/helper/remote-execution/docker-executor"}}');var r=n(74848),c=n(28453);const i={},a="Cdk8s Resources",o={},l=[{value:"Installation",id:"installation",level:2},{value:"Prerequisite",id:"prerequisite",level:3},{value:"Encapsulate a CDK8S chart",id:"encapsulate-a-cdk8s-chart",level:2},{value:"Outputs",id:"outputs",level:3},{value:"Static output",id:"static-output",level:4},{value:"Dynamic output",id:"dynamic-output",level:4},{value:"Consuming the resource",id:"consuming-the-resource",level:2},{value:"Resource lifecycle",id:"resource-lifecycle",level:2},{value:"Update step",id:"update-step",level:3},{value:"Cycle step (drift detection)",id:"cycle-step-drift-detection",level:3},{value:"Uninstall step",id:"uninstall-step",level:3},{value:"Resource output",id:"resource-output",level:2},{value:"Kube credentials",id:"kube-credentials",level:2}];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"cdk8s-resources",children:"Cdk8s Resources"})}),"\n",(0,r.jsx)(t.p,{children:"CDK8S Resources let you programmatically manage and deploy your CDK8S charts.\nIt provides an enhanced way of working with the CDK8S, enabling you to:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Consistently deploy your charts with built-in rollback mechanisms in case of failure"}),"\n",(0,r.jsx)(t.li,{children:"Extend your infrastructure-as-code logic (e.g., fetch the IP of a load balancer via SDK calls and update your DNS provider automatically)"}),"\n",(0,r.jsx)(t.li,{children:"Trigger redeployments in response to specific events"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"CdkResource"})," construct is part of the ",(0,r.jsx)(t.code,{children:"@orbi-ts/fuel"})," package.\nYou need to install it first:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install  @orbi-ts/fuel\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then import it :"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import {CdkResource} from "@orbi-ts/fuel\n'})}),"\n",(0,r.jsx)(t.h3,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"kubectl"})," must be installed and properly configured."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"encapsulate-a-cdk8s-chart",children:"Encapsulate a CDK8S chart"}),"\n",(0,r.jsxs)(t.p,{children:["Assume you have a CDK8S chart named ",(0,r.jsx)(t.code,{children:"BasicChart"}),".\nYou wrap it in a CDK8S resource by extending the ",(0,r.jsx)(t.code,{children:"Cdk8sResource"})," class."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export class BasicResource extends Cdk8sResource {\n  StackConstructor = BasicChart ;\n}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"outputs",children:"Outputs"}),"\n",(0,r.jsxs)(t.p,{children:["In cdk8s, there is no-built in mechanism as Cloudformation or pulumi output.\nWith orbits, you can mimic this behaviour by defining your own output you can reuse elsewhere.\nYou define your output overriding the ",(0,r.jsx)(t.code,{children:"setOutput"})," method."]}),"\n",(0,r.jsx)(t.h4,{id:"static-output",children:"Static output"}),"\n",(0,r.jsx)(t.p,{children:"You can output any values of the object in your stack."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/cdk/lambda-stack.ts"',children:'export class BasicResource extends Cdk8sResource {\n  StackConstructor = BasicChart ;\n  stack: BasicChart;//for typing purpose\n\n  async setOutput(): Promise<this["IOutput"]> {\n    const stack = await this.generateStack();\n    return {\n      namespace: stack.ns.name,\n      cronJobName: stack.cronJob.name\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"This way, you can, for example :"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["let the cdk8s generate a namespace name : ",(0,r.jsx)(t.code,{children:"this.ns = new kplus.Namespace(this, 'my-namespace')"})]}),"\n",(0,r.jsx)(t.li,{children:"retrieve and output the generated name :"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/cdk8s/basic-resource.ts"',children:'export class BasicResource extends Cdk8sResource {\n  StackConstructor = BasicChart ;\n  stack: BasicChart;//for typing purpose\n\n  async setOutput(): Promise<this["IOutput"]> {\n    const stack = await this.generateStack();\n    return {\n      namespace: stack.ns.name,\n      cronJobName: stack.cronJob.name\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"dynamic-output",children:"Dynamic output"}),"\n",(0,r.jsx)(t.p,{children:"You can also want more complex export.\nFor example, you maybe need the ip of your loadbalancer in order to set this IP into your DNS."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"First in your stack, export the load balancer service :"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/cdk8s/basic-resource.ts"',children:'this.loadBalancerService = new kplus.Service(this, "load-balancer") \n'})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Then, in the ",(0,r.jsx)(t.code,{children:"setOutput()"}),", query the kube api to have the IP address"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/orbits/lambda-resource.ts"',children:"export class BasicResource extends CdkResource{\n    StackConstructor = BasicChart\n\n    declare IOutput: {\n\t\t publicIPV4: string;\n\t  };\n\n    async setOutput(){\n        const stack = await this.generateStack();\n\t\t\t\tconst apiServiceInfo = await this.kubeApi.coreApi.readNamespacedService({\n\t\t\t\t\tname: stack.loadBalancerService.name,\n\t\t\t\t\tnamespace: stack.loadBalancerService.metadata.namespace || 'default',\n\t\t\t\t})\n        return apiServiceInfo.status.loadBalancer.ingress[0].ip;\n    }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"consuming-the-resource",children:"Consuming the resource"}),"\n",(0,r.jsx)(t.p,{children:"You can consume cdk resource in any workflow/resource."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/orbits/my-workflow.ts"',children:'export class MyWorkflow extends Workflow{\n    \n    async define(){\n        //...\n        await this.do("deployMyChart", new MyChartResource().setArgument({\n            stackName: "my-chart",\n            stackProps: {\n                //other props that will be passed to the stack constructors.\n                xyz: "xyz",\n            }\n        }))\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"resource-lifecycle",children:"Resource lifecycle"}),"\n",(0,r.jsx)(t.h3,{id:"update-step",children:"Update step"}),"\n",(0,r.jsx)(t.p,{children:"The update step deploys the CDK8S stack, using argument.stackProps as input to the StackConstructor."}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsx)(t.p,{children:"For advanced scenarios (e.g. when needing secrets or dynamic inputs), you can override the init method."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'src="src/orbits/lambda-resource.ts"',children:'\nsecretValue = ""\nasync init(){\n    this.secretValue = await this.getSecret(this.argument.secretId)\n}\n'})}),(0,r.jsx)(t.p,{children:"This lets you fetch secrets at runtime and ensures they are never stored by Orbits."})]}),"\n",(0,r.jsx)(t.p,{children:"The update step processus is :"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["synth the stack and deploy it through ",(0,r.jsx)(t.code,{children:"kubectl apply"})]}),"\n",(0,r.jsx)(t.li,{children:"wait for the success of the deployment"}),"\n",(0,r.jsx)(t.li,{children:"if the deployment is a success, prune old resources"}),"\n",(0,r.jsx)(t.li,{children:"if the deployment is a failure, rollback to previous state and prune new resources"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"cycle-step-drift-detection",children:"Cycle step (drift detection)"}),"\n",(0,r.jsx)(t.p,{children:"By default, there is no cycle step defined.\nHowever, the cycle hook can be used to do drift detection.\nIn this case, just define a cycle hook and choose what to do inside."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'defineCycle(){\n    const currentState = await this.do("getCurrentState", ()=>{\n        //some call with kube sdk\n    })\n    if(currentState !== this.argument.stackProps.someParams){\n        //choose to redeploy\n        await this.do("redeploy", this.clone().setCommand("Update"))\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["By default, the cycle is run every 10 minutes.\nYou can override this parameters overiding ",(0,r.jsx)(t.code,{children:"defaultResourceSettings"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"uninstall-step",children:"Uninstall step"}),"\n",(0,r.jsx)(t.p,{children:"The uninstall step removes the CDK8S stack from the kube environment."}),"\n",(0,r.jsx)(t.h2,{id:"resource-output",children:"Resource output"}),"\n",(0,r.jsxs)(t.p,{children:["You can retrieve Kube outputs from the deployed chart using ",(0,r.jsx)(t.code,{children:"getResourceOutput()"})," method."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'        //shortcut to get cloudformation output of the stacks\n        const myOutput = await this.do("getMyChartOutput", ()=>{\n            return myChartResource.getResourceOutput();\n        })\n        //output are also available after a deployments\n        const myChartOutput = await this.do("deployMyChart", myChartResource);\n\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The type of ",(0,r.jsx)(t.code,{children:"myChartOutput"})," will be ",(0,r.jsx)(t.code,{children:"MyChart['IOutput']"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"kube-credentials",children:"Kube credentials"}),"\n",(0,r.jsx)(t.p,{children:"By default, the stack will be deployed using the local kubeconfig of your environment.\nHowever, you can explicitly define how the kubeconfig is selected."}),"\n",(0,r.jsx)(t.p,{children:"** Example: Using a specific kubeconfig file **\nYou can specify the way kubeConfig is chosen ."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"new MyChartResource().setArgument({\n    kubeConfig: {\n      from : {\n        file : '/tmp/my-file', //path to the file\n        cluster: boolean\n      }\n    }\n})\n"})}),"\n",(0,r.jsx)(t.p,{children:"** Advanced Use Cases **"}),"\n",(0,r.jsxs)(t.p,{children:["In more complex scenarios, you might need to download the ",(0,r.jsx)(t.code,{children:"kubeconfig"})," dynamically before deploying.\nYou may also want to standardize how kube credentials are handled across all your actions, instead of specifying kubeConfig every time you instantiate a chart resource.\nTo do this, you can override the asynchronous ",(0,r.jsx)(t.code,{children:"setKubeApi"})," method:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export class MyChartResource extends Cdk8sResource {\n\n  override async setKubeApi() {\n    // Download the kubeconfig file, e.g., from your cloud provider\n    await getConfigFile(this.argument.clusterName);\n\n    this.kubeApi = new KubeApi({\n      from: {\n        file: '/path/to/the/downloaded/config'\n      }\n    });\n  }\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);