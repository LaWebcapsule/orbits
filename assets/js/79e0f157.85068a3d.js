"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3315],{797:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"documentation/guides/cross-account-cdk","title":"CDK Cross-Account Resource Example","description":"A practical example demonstrating how to manage AWS resources across multiple accounts using CDK and orbits. This project showcases an hello-world example : it deploys an AWS Systems Manager parameter in Account A and read it from a Lambda function in Account B.","source":"@site/docs/documentation/guides/cross-account-cdk.md","sourceDirName":"documentation/guides","slug":"/documentation/guides/cross-account-cdk","permalink":"/documentation/guides/cross-account-cdk","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hello world","permalink":"/documentation/guides/hello-world"},"next":{"title":"An express server over your resources","permalink":"/documentation/guides/express-server"}}');var t=s(4848),c=s(8453);const a={},o="CDK Cross-Account Resource Example",i={},l=[{value:"Problem statement",id:"problem-statement",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Clone this repository",id:"clone-this-repository",level:3},{value:"Setup AWS environment",id:"setup-aws-environment",level:3},{value:"Configure environment values",id:"configure-environment-values",level:4},{value:"Deployment",id:"deployment",level:2},{value:"Verify the result of Lambda Function",id:"verify-the-result-of-lambda-function",level:3},{value:"Cleanup",id:"cleanup",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Step-by-step explanation",id:"step-by-step-explanation",level:2},{value:"Security Considerations",id:"security-considerations",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cdk-cross-account-resource-example",children:"CDK Cross-Account Resource Example"})}),"\n",(0,t.jsx)(n.p,{children:"A practical example demonstrating how to manage AWS resources across multiple accounts using CDK and orbits. This project showcases an hello-world example : it deploys an AWS Systems Manager parameter in Account A and read it from a Lambda function in Account B."}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem statement"}),"\n",(0,t.jsx)(n.p,{children:"Using AWS CDK and CloudFormation, consuming cross-account resources is difficult because stacks cannot directly reference resources from other AWS accounts. The core issue is that CloudFormation stacks cannot directly reference resources from other AWS accounts, requiring manual coordination and hardcoded values\nCommon problematic scenarios include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Accessing Docker images built in account A from account B"}),"\n",(0,t.jsx)(n.li,{children:"Using secrets from account A in account B applications"}),"\n",(0,t.jsx)(n.li,{children:"Establishing VPC peering between accounts"}),"\n",(0,t.jsx)(n.li,{children:"Granting cross-account S3 bucket access"}),"\n",(0,t.jsx)(n.li,{children:"Sharing Lambda layers across accounts"}),"\n",(0,t.jsx)(n.li,{children:"Writing values into the DNS zone of account A from account B"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This limitation is shown in this example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const app = new cdk.App()\n\nconst paramA = new ParamStack(app, 'stack-A', {\n    ...,\n    env: {\n        account: \"account-A\"\n    }\n})\n\nconst lambdaB = new LambdaStack(app, 'stack-A', {\n    ...,\n    parameterArn : paramA.parameter.arn, // \u274c you can not reference a resource from a stack from another account\n    env: {\n        account: \"account-B\"\n    }\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"With orbits, cross-account resource sharing works seamlessly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const paramOutput = await this.do("updateParam", new ParamResource());\n\nawait this.do("updateLambda", new LambdaResource().setArgument({\n    stackProps : {\n        parameterArn: paramOutput.parameterArn,// \u2705 you can reference any stack\n        env: {\n            account : this.argument.accountA.id\n        }\n    }\n}))\n'})}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsx)(n.mermaid,{value:'---\nconfig:\n  flowchart:\n    htmlLabels: false\n---\nflowchart LR\n    legend@{ label: "Account A (Parameter Store)" } ~~~ B@{ label: "Account B (Lambda Consumer)" }\n    markdown["SSM Parameter Store\n    Key:  /my/param\n    Value: \'Hello World\'\n    "] <--\x3e newLines["Lambda Function\n    Reads cross-account parameter\n    "]\n    legend@{ shape: rect}\n    B@{ shape: rect}\n    style legend stroke:none\n    style B stroke:none'}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.h3,{id:"clone-this-repository",children:"Clone this repository"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Clone ",(0,t.jsx)(n.a,{href:"https://github.com/LaWebcapsule/orbits",children:"this repository"})]}),"\n",(0,t.jsx)(n.li,{children:"Go to this directory :"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd samples/cross-account-aws-cdk\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Install node.js dependencies :\n",(0,t.jsx)(n.code,{children:"npm i"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"setup-aws-environment",children:"Setup AWS environment"}),"\n",(0,t.jsx)(n.p,{children:"You'll need access to two AWS accounts with the following permissions:"}),"\n",(0,t.jsx)(n.p,{children:"Account A: CloudFormation deployment rights\nAccount B: CloudFormation deployment rights"}),"\n",(0,t.jsx)(n.h4,{id:"configure-environment-values",children:"Configure environment values"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Copy the environment template:\n",(0,t.jsx)(n.code,{children:"bash cp .base.env .env"})]}),"\n",(0,t.jsx)(n.li,{children:"Edit .env file with your account details."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Load environment variables:\n",(0,t.jsx)(n.code,{children:"bash export $(cat .env | xargs)"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Define your mongo_url :\n",(0,t.jsx)(n.code,{children:"bash export ORBITS_DB__MONGO__URL=your-mongo-url"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Deploy Cross-Account Infrastructure\n",(0,t.jsx)(n.code,{children:"bash npx tsx src/orbits/orbi.ts"}),"\nThis command will:"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Deploy the SSM parameter in Account A"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create the Lambda function in Account B with appropriate cross-account permissions"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Set up the necessary IAM roles and policies for cross-account access"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"verify-the-result-of-lambda-function",children:"Verify the result of Lambda Function"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Navigate to the AWS Console for Account B"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Go to Lambda service"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Find the deployed function (typically named with a stack prefix)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Click Test to create a test event"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Execute the test"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Expected Output\nThe Lambda function should successfully retrieve the parameter from Account A and should display the value of parameter A in its logs.\n",(0,t.jsx)(n.code,{children:"typescript console.log('Param:', param.Parameter.Value); "}),'\nThe default value of parameter is "hello-world".']}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cleanup",children:"Cleanup"}),"\n",(0,t.jsx)(n.p,{children:"To remove all deployed resources from both accounts:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export HELLO_COMMAND=uninstall\nnpx tsx src/orbits/orbi.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u26a0\ufe0f Warning: This will permanently delete all resources created by this example. Make sure you want to remove everything before running this command."}),"\n",(0,t.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 orbits/\n\u2502   \u2502   \u2514\u2500\u2500 orbi.ts # Main orchestration script\n\u2502   \u2502   \u251c\u2500\u2500 lambda-resource.ts # lambda resource definition\n\u2502   \u2502   \u251c\u2500\u2500 param-resource.ts # Param resource definition\n\u2502   \u2502   \u251c\u2500\u2500 hello-resource.ts # Hello resource definition : the resource that make the junction between param and lambda\n\n\u2502   \u251c\u2500\u2500 cdk/              # CDK stack definitions\n\u2502   \u2502   \u251c\u2500\u2500 lambda.ts # lambda CDK stack\n\u2502   \u2502   \u251c\u2500\u2500 param.ts # Param CDK stack\n\u251c\u2500\u2500 .base.env                # Environment template\n\u251c\u2500\u2500 .env                     # Your environment variables (git-ignored)\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-by-step-explanation",children:"Step-by-step explanation"}),"\n",(0,t.jsxs)(n.p,{children:["For a detailed walkthrough of the different files and how they work together, check out ",(0,t.jsx)(n.a,{href:"/blog/2025-06-25-cross-account-cdk.md",children:"this blog post"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsx)(n.p,{children:"The cross-account access follows the principle of least privilege\nParameters are accessed using IAM roles, not hardcoded credentials\nCloudFormation stacks can be easily audited for security compliance"})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},c=r.createContext(t);function a(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);