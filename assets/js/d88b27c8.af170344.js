"use strict";(self.webpackChunkorbits_doc=self.webpackChunkorbits_doc||[]).push([[8645],{6767:e=>{e.exports=JSON.parse('{"permalink":"/blog/orchestrate-stack","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-09-26-orchestrate-a-stack-of-services.md","source":"@site/blog/2025-09-26-orchestrate-a-stack-of-services.md","title":"Orchestrating a stack of services across multiple environments","description":"In our previous blog post, we introduced the basics of orchestration and showed how to write a deployment workflow for a backend service.","date":"2025-09-26T00:00:00.000Z","tags":[{"inline":true,"label":"orchestration","permalink":"/blog/tags/orchestration"},{"inline":true,"label":"node.js","permalink":"/blog/tags/node-js"},{"inline":true,"label":"workflow","permalink":"/blog/tags/workflow"},{"inline":false,"label":"OrbiTS","permalink":"/blog/tags/orbits","description":"Posts related to OrbiTS"}],"readingTime":5.01,"hasTruncateMarker":true,"authors":[{"name":"Lo\xefc D\xe9champs","title":"CTO @ Webcapsule","url":"https://github.com/ldechamps","page":{"permalink":"/blog/authors/loic"},"socials":{"linkedin":"https://www.linkedin.com/in/loicdechamps/","github":"https://github.com/ldechamps"},"imageURL":"/img/authors/loic.png","key":"loic"}],"frontMatter":{"slug":"orchestrate-stack","title":"Orchestrating a stack of services across multiple environments","authors":["loic"],"tags":["orchestration","node.js","workflow","orbits"]},"unlisted":false,"nextItem":{"title":"Write your CI/CD in TypeScript","permalink":"/blog/ci-cd-in-typescript"}}')},6917:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});var n=s(6767),o=s(4848),r=s(8453);const a={slug:"orchestrate-stack",title:"Orchestrating a stack of services across multiple environments",authors:["loic"],tags:["orchestration","node.js","workflow","orbits"]},i=void 0,c={authorsImageUrls:[void 0]},l=[];function d(e){const t={a:"a",img:"img",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["In our ",(0,o.jsx)(t.a,{href:"/blog/orchestration-typescript",children:"previous blog post"}),", we introduced the basics of orchestration and showed how to write a deployment workflow for a backend service.\nNow, let\u2019s take it further.\nImagine our web agencies manage web services across multiple tenants : one cloud instance per client. The stack includes several services, such as frontend, authentication, and backend. And it must support multi-tenant deployment.\nThis brings new challenges:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"coordinating deployments across environments"}),"\n",(0,o.jsx)(t.li,{children:"sharing common resources (like a cloud account, a VPC, a database...) between services in the stack"}),"\n",(0,o.jsx)(t.li,{children:"handling failures and rollbacks"}),"\n",(0,o.jsx)(t.li,{children:"keeping each tenant isolated yet manageable\nTo address this, we need to go beyond simple workflows and start managing state, transitions, shared resources, and deployment strategies.\nLet\u2019s see how simple this becomes with Orbits."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"orchestration",src:s(9738).A+"",width:"1528",height:"611"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(6540);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},9738:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/orchestration-2-05e7a9be561bc7bac6cf22d543f4c4aa.png"}}]);