"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4631],{3526:e=>{e.exports=JSON.parse('{"permalink":"/blog/cross-account-cdk","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-06-25-cross-account-cdk.md","source":"@site/blog/2025-06-25-cross-account-cdk.md","title":"Solving cross-account resources for AWS CDK","description":"If you\'ve ever tried to build a multi-account AWS architecture using CDK or CloudFormation, you\'ve probably hit the same frustrating wall: cross-account resource references don\'t work without manual coordination and hardcoded values. What should be a simple task\u2014like reading a parameter from Account A in a Lambda function deployed to Account B\u2014becomes a tedious manual process. This behaviour is already documented and while AWS also documents workarounds, there\u2019s no indication that this is going to change anytime soon. However, these approaches don\'t scale when you have multiple services and resources spanning different accounts across your organization.","date":"2025-06-25T00:00:00.000Z","tags":[{"inline":true,"label":"aws-cdk","permalink":"/blog/tags/aws-cdk"},{"inline":true,"label":"orbits","permalink":"/blog/tags/orbits"}],"readingTime":6.81,"hasTruncateMarker":true,"authors":[{"name":"Louis Dussarps","title":"CEO @ Webcapsule","url":"https://github.com/louisdussarps","page":{"permalink":"/blog/authors/louis"},"socials":{"linkedin":"https://www.linkedin.com/in/louisdussarps/","github":"https://github.com/louisdussarps"},"imageURL":"/img/authors/louis.png","key":"louis"}],"frontMatter":{"slug":"cross-account-cdk","title":"Solving cross-account resources for AWS CDK","authors":["louis"],"tags":["aws-cdk","orbits"]},"unlisted":false,"nextItem":{"title":"Infra is code","permalink":"/blog/manifesto"}}')},8453:(e,o,s)=>{s.d(o,{R:()=>n,x:()=>c});var t=s(6540);const a={},r=t.createContext(a);function n(e){const o=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),t.createElement(r.Provider,{value:o},e.children)}},8524:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>n,metadata:()=>t,toc:()=>u});var t=s(3526),a=s(4848),r=s(8453);const n={slug:"cross-account-cdk",title:"Solving cross-account resources for AWS CDK",authors:["louis"],tags:["aws-cdk","orbits"]},c="Solving AWS Cross-Account Resource Access through CDK Orchestration",i={authorsImageUrls:[void 0]},u=[];function l(e){const o={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o.p,{children:["If you've ever tried to build a multi-account AWS architecture using CDK or CloudFormation, you've probably hit the same frustrating wall: cross-account resource references don't work without manual coordination and hardcoded values. What should be a simple task\u2014like reading a parameter from Account A in a Lambda function deployed to Account B\u2014becomes a tedious manual process. This behaviour is already ",(0,a.jsx)(o.a,{href:"https://www.luminis.eu/blog/cross-account-aws-resource-access-with-aws-cdk/",children:"documented"})," and while AWS also documents ",(0,a.jsx)(o.a,{href:"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/walkthrough-crossstackref.html",children:"workarounds"}),", there\u2019s no indication that this is going to change anytime soon. However, these approaches don't scale when you have multiple services and resources spanning different accounts across your organization."]}),"\n",(0,a.jsx)(o.p,{children:"This post walks through a practical example that demonstrates both the problem and a solution using orbits, a tool designed to seamless orchestrate all of your IaC with code."})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);