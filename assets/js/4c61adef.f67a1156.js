"use strict";(self.webpackChunkorbits_doc=self.webpackChunkorbits_doc||[]).push([[157],{1441:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/singe-ci-cd-a48abc34e4df28cef342f6e8657142e5.png"},1584:e=>{e.exports=JSON.parse('{"permalink":"/blog/ci-cd-in-typescript","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-08-27-ci-cd-in-typescript.md","source":"@site/blog/2025-08-27-ci-cd-in-typescript.md","title":"Write your CI/CD in TypeScript","description":"If most CI/CD tools today are robust, the way we define scripts in them comes with a few drawbacks:","date":"2025-08-27T00:00:00.000Z","tags":[{"inline":true,"label":"orchestration","permalink":"/blog/tags/orchestration"},{"inline":false,"label":"OrbiTS","permalink":"/blog/tags/orbits","description":"Posts related to OrbiTS"},{"inline":false,"label":"CLI","permalink":"/blog/tags/cli","description":"Posts related to OrbiTS CLI"},{"inline":false,"label":"AWS CDK","permalink":"/blog/tags/aws-cdk","description":"Posts related to the AWS CDK"},{"inline":true,"label":"ci/cd","permalink":"/blog/tags/ci-cd"}],"readingTime":5.01,"hasTruncateMarker":true,"authors":[{"name":"Tom Marcuzzi","title":"Head of engineering @ Webcapsule","url":"https://linkedin.com/in/tom-marcuzzi","page":{"permalink":"/blog/authors/tom"},"socials":{"linkedin":"https://www.linkedin.com/in/tommarcuzzi/","github":"https://github.com/tommarcuzzi"},"imageURL":"/img/authors/tom.png","key":"tom"}],"frontMatter":{"slug":"ci-cd-in-typescript","title":"Write your CI/CD in TypeScript","authors":["tom"],"tags":["orchestration","orbits","cli","aws-cdk","ci/cd"]},"unlisted":false,"nextItem":{"title":"A deployment workflow with TypeScript","permalink":"/blog/orchestration-typescript"}}')},5538:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var s=i(1584),n=i(4848),o=i(8453);const r={slug:"ci-cd-in-typescript",title:"Write your CI/CD in TypeScript",authors:["tom"],tags:["orchestration","orbits","cli","aws-cdk","ci/cd"]},a=void 0,c={authorsImageUrls:[void 0]},l=[];function d(e){const t={img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"If most CI/CD tools today are robust, the way we define scripts in them comes with a few drawbacks:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"they have strong vendor lock-ins;"}),"\n",(0,n.jsx)(t.li,{children:"they are difficult to test and debug locally;"}),"\n",(0,n.jsx)(t.li,{children:"they all use a different syntax in YAML, which is difficult to extend and compose.\nFor all these reasons, when the person who wrote them is not around, it\u2019s not uncommon that teams don\u2019t know what scripts do. They rarely evolve and their maintenance is hard."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Using code and native Node.js modules to write CI/CD could solve all these problems and comes with a lot of benefits:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"it\u2019s possible to debug locally. To avoid regressions, it's even possible to test the CI/CD with a normal testing framework;"}),"\n",(0,n.jsx)(t.li,{children:"it offers better reusability across projects and greater composability;"}),"\n",(0,n.jsx)(t.li,{children:"it uses code instead of configuration, making it easy to catch errors, manage retries, loops, and conditional logic;"}),"\n",(0,n.jsx)(t.li,{children:"it integrates seamlessly with the rich Node.js ecosystem."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"ci-cd",src:i(1441).A+"",width:"1534",height:"644"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var s=i(6540);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);