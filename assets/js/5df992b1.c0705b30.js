"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3897],{686:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var t=s(6734),r=s(4848),i=s(8453);const o={slug:"programmable-cdk8s-deployment",title:"Automate deployments of cdk8s template",authors:["tom","louis"],tags:["cdk8s","orbits","model-driven orchestration"]},l="Model-driven orchestration of cdk8s",a={authorsImageUrls:[void 0,void 0]},c=[{value:"The Need for cdk8s orchestration",id:"the-need-for-cdk8s-orchestration",level:2},{value:"Final result",id:"final-result",level:2},{value:"Implementation",id:"implementation",level:2},{value:"The orbits Cdk8s resources",id:"the-orbits-cdk8s-resources",level:3},{value:"Deploying the chart",id:"deploying-the-chart",level:4},{value:"Ensuring the deployment is a success",id:"ensuring-the-deployment-is-a-success",level:4},{value:"Storing the latest chart",id:"storing-the-latest-chart",level:4},{value:"Pruning unused resources",id:"pruning-unused-resources",level:4},{value:"Key Benefits",id:"key-benefits",level:3},{value:"Looking Forward",id:"looking-forward",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://cdk8s.io/",children:"Cdk8s"})," is a great tool to write your Kubernetes IaC templates using standard programming languages. But unlike the ",(0,r.jsx)(n.a,{href:"https://aws.amazon.com/fr/cdk/",children:"AWS cdk"}),", which is tightly integrated with CloudFormation to manage stack deployment, cdk8s has no native deployment mechanism."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, it allows you to synthesize manifests and deploy them using ",(0,r.jsx)(n.code,{children:"kubectl apply"}),", or optionally through ",(0,r.jsx)(n.a,{href:"https://helm.sh/",children:"Helm"}),". While both approaches can work, they often fall short for more advanced use cases \u2014 for example, when you want to programmatically chain deployments, export values from the chart, or implement a custom rollback and prune strategy."]}),"\n",(0,r.jsx)(n.p,{children:"In this blog post, we\u2019ll explain how we built a model-driven orchestrator for cdk8s using Orbits \u2014 a lightweight framework for orchestrating cloud resources and workflows. We\u2019ll show how you can use it, adapt it to your own needs, or even build your own orchestrator based on the same principles. If Orbits fits your use case, you can directly reuse what we\u2019ve built."}),"\n",(0,r.jsx)(n.h2,{id:"the-need-for-cdk8s-orchestration",children:"The Need for cdk8s orchestration"}),"\n",(0,r.jsx)(n.p,{children:"There is no built-in way to programmatically and reliably deploy a cdk8s stack \u2014 especially outside of the AWS ecosystem."}),"\n",(0,r.jsx)(n.p,{children:"The current options are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Synthesize the stack and apply it with ",(0,r.jsx)(n.code,{children:"kubectl apply"})]}),"\n",(0,r.jsx)(n.li,{children:"Deploy the stack as a Helm chart"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"But both of these have shortcomings:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"They are not easily orchestrated programmatically"}),"\n",(0,r.jsx)(n.li,{children:"Helm has known limitations when integrating with cdk8s"}),"\n",(0,r.jsx)(n.li,{children:"There\u2019s no native support for retries, failover, or rollback"}),"\n",(0,r.jsx)(n.li,{children:"There is no built-in mechanism to chain the deployment of multiple charts, especially if some charts are on one kube cluster and other on another kube cluster"}),"\n",(0,r.jsx)(n.li,{children:"Helm\u2019s rollback model didn\u2019t align with our platform needs"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In our case \u2014 building internal platforms for highly regulated environments \u2014 we needed more control. Our deployment flow had to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure cloud provider resources via API calls"}),"\n",(0,r.jsx)(n.li,{children:"Deploy multiple charts programmatically in a precise order"}),"\n",(0,r.jsx)(n.li,{children:"Use the results of deployments (like IPs or service names) to configure other infrastructure components"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Given these needs, existing options were simply not enough.\nWhat we were looking for resembled the CloudFormation model:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Attempt a deployment"}),"\n",(0,r.jsx)(n.li,{children:"Rollback to the previous state on failure"}),"\n",(0,r.jsx)(n.li,{children:"On success, prune obsolete resources"}),"\n",(0,r.jsx)(n.li,{children:"Output values that could be reused in subsequent steps"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Additionally, we needed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Safe concurrent executions, to allow multiple deployments at the same time without conflict"}),"\n",(0,r.jsx)(n.li,{children:"Built-in retry policies for transient failures"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These requirements led us to build a dedicated orchestrator for cdk8s using Orbits \u2014 a model-driven orchestration engine designed for reliability and composability."}),"\n",(0,r.jsx)(n.h2,{id:"final-result",children:"Final result"}),"\n",(0,r.jsxs)(n.p,{children:["The result is an Orbits resource that manages your cdk8s deployment.\nYou can read the ",(0,r.jsx)(n.a,{href:"/documentation/helper/integrations/cdk8s-resource",children:"orbits documentation"})," on how to use it."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You can use it by extending the base class:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export class BasicResource extends Cdk8sResource {\n  StackConstructor = BasicChart ;\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Or dynamically assign a custom stack generation method:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const myCdk8sResource = new Cdk8sResource();\nmyCdk8sResource.generateStack = ()=>{\n    return new cdk8s.Chart(myCdk8sResource.app, 'empty-chart')\n}\n\nawait this.do(\"update-stack\", {dynamicAction: myCdk8sResource});\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Outputs",type:"info",children:[(0,r.jsx)(n.p,{children:"you can export outputs, which allows you to chain charts or propagate values (like an IP address for DNS updates)"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"async setOutput(){\n        const stack = await this.generateStack();\n        const apiServiceInfo = await this.kubeApi.coreApi.readNamespacedService({\n            name: stack.loadBalancerService.name,\n            namespace: stack.loadBalancerService.metadata.namespace || 'default',\n        })\n        return apiServiceInfo.status.loadBalancer.ingress[0].ip;\n}\n"})})]}),"\n",(0,r.jsxs)(n.admonition,{title:"Concurrency",type:"info",children:[(0,r.jsx)(n.p,{children:"Concurrency is also managed by Orbits. If a deployment is already running, concurrent executions will be serialized to prevent state corruption"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'    //somewhere\n    this.do("deploy", new MyBasicChartResource())\n    //elsewhere\n    this.do("deploy", new MyBasicChartResource())\n'})}),(0,r.jsxs)(n.p,{children:["The two deployments will ",(0,r.jsx)(n.a,{href:"/documentation/core-concepts/resource#convergent-execution-coalescing",children:"coalesce"}),"."]})]}),"\n",(0,r.jsx)(n.admonition,{title:"Crash-proof",type:"info",children:(0,r.jsxs)(n.p,{children:["Orbits is ",(0,r.jsx)(n.a,{href:"/documentation/quick-start#workflow-a-chain-of-actions",children:"crash-proof"}),".\nIf a crash occurs mid-deployment, Orbits will resume from the same step on restart."]})}),"\n",(0,r.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsx)(n.p,{children:"From a cdk8s chart, we want to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Deploy the chart reliably"}),"\n",(0,r.jsx)(n.li,{children:"Retry on failure"}),"\n",(0,r.jsx)(n.li,{children:"Rollback to the previous state if necessary"}),"\n",(0,r.jsx)(n.li,{children:"Prune obsolete resources"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"the-orbits-cdk8s-resources",children:"The orbits Cdk8s resources"}),"\n",(0,r.jsxs)(n.p,{children:["In Orbits, ",(0,r.jsx)(n.a,{href:"/documentation/core-concepts/resources",children:"resources"})," are stateful units that define hooks like defineUpdate.\nFor the deployment of a cdk8s chart, we only need the ",(0,r.jsx)(n.code,{children:"update"})," hook.\nThe high-level flow of the resource implementation is as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'export class Cdk8sResource{\n    \n    defineUpdate(){\n        try{\n            await this.do("deploy", ...)\n        }\n        catch(err){\n            this.bag.rollBackNeeded = true;\n            await this.do("rollback", ...)\n        }\n        finally{\n            await this.do("prune", ...)\n        }\n\n        if(!this.bag.rollBackNeeded){\n            await this.do("storeNewChart", ...)\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart TD\n    Start["Start"] --\x3e Deploy["Deploy"]\n    Deploy -- Success --\x3e FinallyPrune["Prune"]\n    Deploy -- Error --\x3e SetRollback["Rollback"]\n    SetRollback --\x3e FinallyPrune\n    FinallyPrune --\x3e CheckRollbackFlag["Deploy has been a success?"]\n    CheckRollbackFlag -- Yes --\x3e Store["Store new chart"]\n    Store --\x3e End["End"]\n    CheckRollbackFlag -- No --\x3e End\n\n    CheckRollbackFlag@{ shape: rounded}'}),"\n",(0,r.jsxs)(n.p,{children:["The complete implementation is available ",(0,r.jsx)(n.a,{href:"https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts",children:"here on github"})]}),"\n",(0,r.jsx)(n.h4,{id:"deploying-the-chart",children:"Deploying the chart"}),"\n",(0,r.jsxs)(n.p,{children:["There are multiple ways to deploy a stack, but we chose ",(0,r.jsx)(n.code,{children:"kubectl apply"})," because it updates only the resources that changed. That means kubectl is required in the environment running the deployment."]}),"\n",(0,r.jsx)(n.h4,{id:"ensuring-the-deployment-is-a-success",children:"Ensuring the deployment is a success"}),"\n",(0,r.jsx)(n.p,{children:"We don\u2019t just fire and forget. We verify that critical resources are ready:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All Deployments reach a ready state"}),"\n",(0,r.jsx)(n.li,{children:"Certificates (e.g., from cert-manager) are marked as ready\nThis check helps us ensure the cluster is in a stable and usable state before moving forward."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"storing-the-latest-chart",children:"Storing the latest chart"}),"\n",(0,r.jsx)(n.p,{children:"We store the chart contents in a Kubernetes Secret. The secret\u2019s name is generated based on the stack name:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"private genSecretName(): string {\n        return `orbits.deployment.${this.argument.stackName}`;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"This allows the system to compare the current state with the previous one during rollback or pruning."}),"\n",(0,r.jsx)(n.h4,{id:"pruning-unused-resources",children:"Pruning unused resources"}),"\n",(0,r.jsx)(n.p,{children:"Pruning depends on whether the deployment succeeded:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"On success, we prune old resources"}),"\n",(0,r.jsx)(n.li,{children:"On failure, we prune newly created resources"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"We compare the list of objects in the stored stack with the current state and remove the unneeded ones.\nWe make sure to never delete:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Namespaces"}),"\n",(0,r.jsx)(n.li,{children:"PersistentVolumeClaims"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CloudFormation-like rollback for Cdk8s chart"}),"\n",(0,r.jsx)(n.li,{children:"Crash-safe and retryable deployments"}),"\n",(0,r.jsx)(n.li,{children:"Safe concurrent operations"}),"\n",(0,r.jsx)(n.li,{children:"Outputs and dependency chaining support"}),"\n",(0,r.jsx)(n.li,{children:"Multi-tenants deployment support"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"looking-forward",children:"Looking Forward"}),"\n",(0,r.jsx)(n.p,{children:"Our orchestrator provides a robust and flexible foundation for managing cdk8s deployments in production. While it already solves some pain points, we plan to improve:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Improved diff tools to preview changes before applying them"}),"\n",(0,r.jsx)(n.li,{children:"Extended tracking and monitoring of additional Kubernetes resources\nAdditionally, the resource offers a promising starting point for implementing drift detection, but that topic will be covered in a future post."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["The source code of the CDk8SResource is available here: ",(0,r.jsx)(n.a,{href:"https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts",children:"https://github.com/LaWebcapsule/orbits/blob/main/helpers/src/standards-resource/cdk8s/cdk8s-resource.ts"})]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6734:e=>{e.exports=JSON.parse('{"permalink":"/blog/programmable-cdk8s-deployment","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-07-11-cdk8s-deployment.md","source":"@site/blog/2025-07-11-cdk8s-deployment.md","title":"Automate deployments of cdk8s template","description":"Cdk8s is a great tool to write your Kubernetes IaC templates using standard programming languages. But unlike the AWS cdk, which is tightly integrated with CloudFormation to manage stack deployment, cdk8s has no native deployment mechanism.","date":"2025-07-11T00:00:00.000Z","tags":[{"inline":true,"label":"cdk8s","permalink":"/blog/tags/cdk-8-s"},{"inline":true,"label":"orbits","permalink":"/blog/tags/orbits"},{"inline":true,"label":"model-driven orchestration","permalink":"/blog/tags/model-driven-orchestration"}],"readingTime":5.31,"hasTruncateMarker":true,"authors":[{"name":"Tom Marcuzzi","title":"Head of engineering @ Webcapsule","url":"https://linkedin.com/in/tom-marcuzzi","page":{"permalink":"/blog/authors/tom"},"socials":{"linkedin":"https://www.linkedin.com/in/tommarcuzzi/","github":"https://github.com/tommarcuzzi"},"imageURL":"/img/authors/tom.png","key":"tom"},{"name":"Louis Dussarps","title":"CEO @ Webcapsule","url":"https://github.com/louisdussarps","page":{"permalink":"/blog/authors/louis"},"socials":{"linkedin":"https://www.linkedin.com/in/louisdussarps/","github":"https://github.com/louisdussarps"},"imageURL":"/img/authors/louis.png","key":"louis"}],"frontMatter":{"slug":"programmable-cdk8s-deployment","title":"Automate deployments of cdk8s template","authors":["tom","louis"],"tags":["cdk8s","orbits","model-driven orchestration"]},"unlisted":false,"nextItem":{"title":"Solving cross-account resources for AWS CDK","permalink":"/blog/cross-account-cdk"}}')},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);