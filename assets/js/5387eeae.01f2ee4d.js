"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[340],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},c=s.createContext(r);function a(e){const t=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(c.Provider,{value:t},e.children)}},65513:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"documentation/helper/integrations/cdk-resource","title":"CDK Resources","description":"CDK Resources let you programmatically manage and deploy your CDK stacks.","source":"@site/docs/documentation/helper/integrations/cdk-resource.md","sourceDirName":"documentation/helper/integrations","slug":"/documentation/helper/integrations/cdk-resource","permalink":"/documentation/helper/integrations/cdk-resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pilot your IaC","permalink":"/documentation/helper/"},"next":{"title":"Cdk8s Resources","permalink":"/documentation/helper/integrations/cdk8s-resource"}}');var r=n(74848),c=n(28453);const a={},o="CDK Resources",i={},l=[{value:"Installation",id:"installation",level:2},{value:"Encapsulate a cdk constructor",id:"encapsulate-a-cdk-constructor",level:2},{value:"Consuming the resource",id:"consuming-the-resource",level:2},{value:"Resource lifecycle",id:"resource-lifecycle",level:2},{value:"Install step",id:"install-step",level:3},{value:"Update step",id:"update-step",level:3},{value:"Cycle step (drift detection)",id:"cycle-step-drift-detection",level:3},{value:"Uninstall step",id:"uninstall-step",level:3},{value:"Resource output",id:"resource-output",level:2},{value:"AWS credentials",id:"aws-credentials",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"cdk-resources",children:"CDK Resources"})}),"\n",(0,r.jsx)(t.p,{children:"CDK Resources let you programmatically manage and deploy your CDK stacks.\nIt provides an enhanced way of working with the CDK, enabling you to:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Easily write cross-account or cross-region resource sharing"}),"\n",(0,r.jsx)(t.li,{children:"Extend your IaC logic where necessary (e.g. using SDK calls to create AWS account programmatically)"}),"\n",(0,r.jsx)(t.li,{children:"Redeploy stacks in response to specific events"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"CdkResource"})," construct is part of the ",(0,r.jsx)(t.code,{children:"@orbi-ts/fuel"})," package.\nYou need to install it first:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install  @orbi-ts/fuel\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then import it :"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import {CdkResource} from "@orbi-ts/fuel\n'})}),"\n",(0,r.jsx)(t.h2,{id:"encapsulate-a-cdk-constructor",children:"Encapsulate a cdk constructor"}),"\n",(0,r.jsxs)(t.p,{children:["Assume you have a CDK stack constructor named ",(0,r.jsx)(t.code,{children:"LambdaStack"}),".\nYou wrap it in a CDK resource by extending the ",(0,r.jsx)(t.code,{children:"CdkResource"})," class."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export class LambdaResource extends CdkResource{\n    StackConstructor = `LambdaStack`\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["If ",(0,r.jsx)(t.code,{children:"LambdaStack"})," defines ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.Stack.html#exportwbrvalueexportedvalue-options",children:"CloudFormation outputs"}),", you should mention their names through an interface."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/cdk/lambda-stack.ts"',children:"export class LambdaStack extends Stack{\n    constructor(){\n        //...\n        new cdk.CfnOutput(this, 'roleArn', {\n            value: helloLambdaFunction.role?.roleArn!\n        })\n    }\n}\n\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/orbits/lambda-resource.ts"',children:"export class LambdaResource extends CdkResource{\n    StackConstructor = `LambdaStack`\n\n    declare IOutput : {\n        roleArn: string\n    }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"consuming-the-resource",children:"Consuming the resource"}),"\n",(0,r.jsx)(t.p,{children:"You can consume cdk resource in any workflow/resource."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'title="src/orbits/my-workflow.ts"',children:'export class MyWorkflow extends Workflow{\n    \n    async define(){\n        //...\n        await this.do("deployLambda", new LambdaResource().setArgument({\n            stackName: "lambda",\n            stackProps: {\n                //other props that will be passed to the stack constructors.\n                env: {\n                    account: "aws-account-id",\n                    region: "aws-account-region"\n                }\n            }\n        }))\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"resource-lifecycle",children:"Resource lifecycle"}),"\n",(0,r.jsx)(t.h3,{id:"install-step",children:"Install step"}),"\n",(0,r.jsx)(t.p,{children:"The install step checks whether the target AWS environment has been bootstrapped with CDK.\nIf not, it automatically bootstraps it."}),"\n",(0,r.jsx)(t.h3,{id:"update-step",children:"Update step"}),"\n",(0,r.jsx)(t.p,{children:"The update step launches the CDK stack, using argument.stackProps as input to the StackConstructor."}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsx)(t.p,{children:"For advanced scenarios (e.g. when needing secrets or dynamic inputs), you can override the init method."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'src="src/orbits/lambda-resource.ts"',children:'\nsecretValue = ""\nasync init(){\n    this.secretValue = await this.getSecret(this.argument.secretArn)\n}\n'})}),(0,r.jsx)(t.p,{children:"This lets you fetch secrets at runtime and ensures they are never stored by Orbits."})]}),"\n",(0,r.jsx)(t.h3,{id:"cycle-step-drift-detection",children:"Cycle step (drift detection)"}),"\n",(0,r.jsx)(t.p,{children:"By default, there is no cycle step defined.\nHowever, the cycle hook can be used to do drift detection.\nIn this case, just define a cycle hook and choose what to do inside."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'defineCycle(){\n    const currentState = await this.do("getCurrentState", ()=>{\n        //some call with aws sdk\n    })\n    if(currentState !== this.argument.stackProps.someParams){\n        //choose to redeploy\n        await this.do("redeploy", this.clone().setCommand("Update"))\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["By default, the cycle is run every 10 minutes.\nYou can override this parameters overiding ",(0,r.jsx)(t.code,{children:"defaultResourceSettings"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"uninstall-step",children:"Uninstall step"}),"\n",(0,r.jsx)(t.p,{children:"The uninstall step removes the CDK stack from the AWS environment."}),"\n",(0,r.jsx)(t.h2,{id:"resource-output",children:"Resource output"}),"\n",(0,r.jsxs)(t.p,{children:["You can retrieve CloudFormation outputs from the deployed stack using ",(0,r.jsx)(t.code,{children:"getResourceOutput()"})," method."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'        //shortcut to get cloudformation output of the stacks\n        const lambdaOutput = await this.do("getLambdaOutput", ()=>{\n            return lambdaResource.getResourceOutput();\n        })\n        //output are also available after a deployments\n        const lambdaOutput = await this.do("deployLambda", lambdaResource);\n\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The type of ",(0,r.jsx)(t.code,{children:"lambdaOutput"})," will be ",(0,r.jsx)(t.code,{children:"LambdaResource['IOutput']"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"aws-credentials",children:"AWS credentials"}),"\n",(0,r.jsxs)(t.p,{children:["If you don't specify anything, the default ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/cdk/v2/guide/configure-access.html",children:"aws credentials"})," of your environment will be use to deploy your stack to cloudformation.\nYou can specify a specific profile to be used using the ",(0,r.jsx)(t.code,{children:"awsProfile"})," argument of the resource."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'new LambdaResource().setArgument({\n    awsProfile: "my-profile"\n})\n'})})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);